{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState, useEffect } from \"react\";\nimport * as geolib from \"geolib\";\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\nimport MapView, { Circle, Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport GlobalColors from \"../../../../Utils/GlobalColors\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport GlobalStyles from \"../../../../Utils/GlobalStyles\";\nimport Route_Start_Styles from \"../../Vehicle_Load/Route_Start/Route_Start_Styles\";\nimport Toast from \"react-native-root-toast\";\nimport Header_Global from \"../../../../Components/Header_Global\";\nimport strings from \"../../../../constants/lng/LocalizedStrings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Route_Start(_ref) {\n  var route = _ref.route;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    speed = _useState2[0],\n    setspeed = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Time = _useState4[0],\n    SetTime = _useState4[1];\n  var SelectedWarehouse = route.params.SelectedWarehouse;\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    distance = _useState6[0],\n    setdistance = _useState6[1];\n  var apiKey = \"AIzaSyDXoHO79vxypTv8xL4V10cf5kFpIYDO9Rk\";\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    pin = _useState8[0],\n    setPin = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    location = _useState10[0],\n    setLocation = _useState10[1];\n  var _useState11 = useState(\"warehouse Location\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    Address = _useState12[0],\n    setAddress = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    lat = _useState14[0],\n    setLat = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    long = _useState16[0],\n    setLong = _useState16[1];\n  var calculatePreciseDistance = function calculatePreciseDistance(lat, long) {\n    var pdis = geolib.getDistance({\n      latitude: pin.latitude,\n      longitude: pin.longitude\n    }, {\n      latitude: lat,\n      longitude: long\n    });\n    setdistance(pdis);\n    console.log(\"Precise Distance\", pdis / 1000);\n    console.log(\"Distance\", pdis);\n    console.log(\"timeee\", pdis / 0 / 60);\n    SetTime(pdis / speed / 60);\n  };\n  useEffect(function _callee() {\n    var _await$Location$reque, status, location, Address;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n          case 2:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n            if (!(status !== \"granted\")) {\n              _context.next = 7;\n              break;\n            }\n            setErrorMsg(\"Permission to access location was denied\");\n            return _context.abrupt(\"return\");\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n              enableHighAccuracy: true,\n              timeout: 15000,\n              maximumAge: 10000\n            }));\n          case 9:\n            location = _context.sent;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              latitude: SelectedWarehouse.latitude,\n              longitude: SelectedWarehouse.longitude\n            }));\n          case 12:\n            Address = _context.sent;\n            setAddress(Address[0].street == null || Address[0].street == \"\" ? \"\" : Address[0].street + \" \" + Address[0].city + \" \" + Address[0].country);\n            calculatePreciseDistance(SelectedWarehouse.latitude, SelectedWarehouse.longitude);\n            setspeed(location.coords.speed < 1 ? 1 : parseFloat(location.coords.speed).toFixed(6));\n            setLat(location.coords.latitude);\n            setLong(location.coords.longitude);\n            setLocation(location);\n            console.log(location.coords);\n            console.log(\"Address\", Address[0].street);\n            console.log(\"selected store\", SelectedWarehouse);\n            setPin({\n              latitude: location.coords.latitude,\n              longitude: location.coords.longitude\n            });\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [1]);\n  var Rote_button_press = function Rote_button_press() {\n    {\n      var resetAction = CommonActions.reset({\n        index: 0,\n        routes: [{\n          name: \"Home\"\n        }]\n      });\n      navigation.dispatch(resetAction);\n      Toast.show(\"Recycle order delivered to warehouse\");\n    }\n  };\n  var navigation = useNavigation();\n  if (pin == \"\" || pin == undefined) {\n    return _jsx(ActivityIndicator, {\n      style: {\n        flex: 1\n      },\n      size: \"large\",\n      color: GlobalColors.Green\n    });\n  } else {\n    return _jsxs(View, {\n      style: [Route_Start_Styles.container, {\n        flexDirection: \"column\"\n      }],\n      children: [_jsx(Header_Global, {\n        Title: strings.WAREHOUSEHOUSELCOAITON,\n        BackIcon: true,\n        Onpress: function Onpress() {\n          navigation.navigate(\"Warehouse_Location\");\n        }\n      }), _jsxs(View, {\n        style: Route_Start_Styles.innerContainer,\n        children: [_jsx(View, {\n          style: Route_Start_Styles.mapview,\n          children: _jsxs(MapView, {\n            provider: PROVIDER_GOOGLE,\n            showsTraffic: true,\n            followsUserLocation: true,\n            showsCompass: true,\n            showsPointsOfInterest: false,\n            showsUserLocation: true,\n            style: {\n              height: \"100%\",\n              width: \"100%\",\n              borderRadius: 6\n            },\n            initialRegion: {\n              latitude: pin.latitude,\n              longitude: pin.longitude,\n              latitudeDelta: 0.04,\n              longitudeDelta: 0.05\n            },\n            onUserLocationChange: function onUserLocationChange(e) {\n              console.log(\"onUserLocationChange\", e.nativeEvent.coordinate);\n              setPin({\n                latitude: e.nativeEvent.coordinate.latitude,\n                longitude: e.nativeEvent.coordinate.longitude,\n                latitudeDelta: e.nativeEvent.coordinate.latitudeDelta,\n                longitudeDelta: e.nativeEvent.coordinate.longitudeDelta\n              });\n            },\n            children: [_jsx(Marker, {\n              coordinate: SelectedWarehouse,\n              title: \"Your Location\",\n              pinColor: \"green\",\n              description: \"David John\",\n              onPress: function onPress(event) {\n                var location = event.nativeEvent.coordinate;\n                console.log(\"Updated Location\", location.latitude);\n                var lat, long;\n                lat = SelectedWarehouse.latitude;\n                long = SelectedWarehouse.longitude;\n              }\n            }), _jsx(Circle, {\n              center: pin,\n              radius: 200,\n              strokeColor: \"green\",\n              strokeWidth: 0.5\n            })]\n          })\n        }), _jsxs(View, {\n          style: Route_Start_Styles.routedetails,\n          children: [_jsxs(View, {\n            style: Route_Start_Styles.innerContainerAddress,\n            children: [_jsx(Image, {\n              style: {\n                marginRight: \"3%\",\n                height: 24,\n                width: 24\n              },\n              source: require(\"../../../../assets/location.png\")\n            }), _jsx(Text, {\n              style: {\n                color: \"#6E6E6E\",\n                fontSize: 14,\n                fontFamily: \"Poppins_500Medium\"\n              },\n              children: Address\n            })]\n          }), _jsxs(View, {\n            style: Route_Start_Styles.innerContainerrow,\n            children: [_jsxs(View, {\n              style: Route_Start_Styles.innerContainerroute,\n              children: [_jsx(Image, {\n                style: {\n                  marginRight: \"3%\",\n                  height: 24,\n                  width: 26\n                },\n                source: require(\"../../../../assets/navroute.png\")\n              }), _jsxs(Text, {\n                style: {\n                  color: \"#6E6E6E\",\n                  fontSize: 14,\n                  paddingTop: 8,\n                  paddingLeft: 8,\n                  fontFamily: \"Poppins_500Medium\"\n                },\n                children: [distance / 1000, \"km\"]\n              })]\n            }), _jsxs(View, {\n              style: Route_Start_Styles.innerContainertime,\n              children: [_jsx(Image, {\n                style: {\n                  marginLeft: \"3%\",\n                  height: 24,\n                  width: 24\n                },\n                source: require(\"../../../../assets/time.png\")\n              }), _jsxs(Text, {\n                style: {\n                  color: \"#6E6E6E\",\n                  fontSize: 14,\n                  paddingLeft: 8,\n                  fontFamily: \"Poppins_500Medium\"\n                },\n                children: [parseFloat(Time).toFixed(0), \" Min\"]\n              })]\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            marginTop: \"3%\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: _jsx(TouchableOpacity, {\n            style: GlobalStyles.ButtonMain,\n            onPress: function onPress() {\n              return Rote_button_press();\n            },\n            children: _jsx(Text, {\n              style: GlobalStyles.ButtonTextMain,\n              children: strings.DELIVERITEMS\n            })\n          })\n        })]\n      })]\n    });\n  }\n}","map":{"version":3,"names":["React","useState","useEffect","geolib","CommonActions","useNavigation","MapView","Circle","Marker","PROVIDER_GOOGLE","Location","GlobalColors","MapViewDirections","GlobalStyles","Route_Start_Styles","Toast","Header_Global","strings","jsx","_jsx","jsxs","_jsxs","Route_Start","_ref","route","_useState","_useState2","_slicedToArray","speed","setspeed","_useState3","_useState4","Time","SetTime","SelectedWarehouse","params","_useState5","_useState6","distance","setdistance","apiKey","_useState7","_useState8","pin","setPin","_useState9","_useState10","location","setLocation","_useState11","_useState12","Address","setAddress","_useState13","_useState14","lat","setLat","_useState15","_useState16","long","setLong","calculatePreciseDistance","pdis","getDistance","latitude","longitude","console","log","_callee","_await$Location$reque","status","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","requestForegroundPermissionsAsync","sent","setErrorMsg","abrupt","getCurrentPositionAsync","enableHighAccuracy","timeout","maximumAge","reverseGeocodeAsync","street","city","country","coords","parseFloat","toFixed","stop","Promise","Rote_button_press","resetAction","reset","index","routes","name","navigation","dispatch","show","undefined","ActivityIndicator","style","flex","size","color","Green","View","container","flexDirection","children","Title","WAREHOUSEHOUSELCOAITON","BackIcon","Onpress","navigate","innerContainer","mapview","provider","showsTraffic","followsUserLocation","showsCompass","showsPointsOfInterest","showsUserLocation","height","width","borderRadius","initialRegion","latitudeDelta","longitudeDelta","onUserLocationChange","e","nativeEvent","coordinate","title","pinColor","description","onPress","event","center","radius","strokeColor","strokeWidth","routedetails","innerContainerAddress","Image","marginRight","source","require","Text","fontSize","fontFamily","innerContainerrow","innerContainerroute","paddingTop","paddingLeft","innerContainertime","marginLeft","marginTop","alignContent","alignItems","justifyContent","TouchableOpacity","ButtonMain","ButtonTextMain","DELIVERITEMS"],"sources":["C:/Users/Ayamo/Downloads/driver-master/Screens/Home/Vehicle_Load/Route_Start/Route_Start.js"],"sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n  ScrollView,\n  ActivityIndicator,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport * as geolib from \"geolib\";\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\nimport MapView, { Circle, Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport GlobalColors from \"../../../../Utils/GlobalColors\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport GlobalStyles from \"../../../../Utils/GlobalStyles\";\nimport Route_Start_Styles from \"../../Vehicle_Load/Route_Start/Route_Start_Styles\";\nimport Toast from \"react-native-root-toast\";\nimport Header_Global from \"../../../../Components/Header_Global\";\nimport strings from \"../../../../constants/lng/LocalizedStrings\";\n\nexport default function Route_Start({ route }) {\n  const [speed, setspeed] = useState(1);\n  const [Time, SetTime] = useState(null);\n\n  const { SelectedWarehouse } = route.params;\n  const [distance, setdistance] = useState(0);\n  const apiKey = \"AIzaSyDXoHO79vxypTv8xL4V10cf5kFpIYDO9Rk\";\n\n  const [pin, setPin] = useState();\n  const [location, setLocation] = useState(null);\n  const [Address, setAddress] = useState(\"warehouse Location\");\n  const [lat, setLat] = useState(null);\n  const [long, setLong] = useState(null);\n\n  const calculatePreciseDistance = (lat, long) => {\n    var pdis = geolib.getDistance(\n      { latitude: pin.latitude, longitude: pin.longitude },\n      { latitude: lat, longitude: long }\n    );\n    setdistance(pdis);\n    console.log(\"Precise Distance\", pdis / 1000);\n    console.log(\"Distance\", pdis);\n\n    console.log(\"timeee\", pdis / 0 / 60);\n    SetTime(pdis / speed / 60);\n\n    // (`Precise Distance\\n\\n${pdis} Meter\\nOR\\n${pdis / 1000} KM`);\n  };\n\n  useEffect(async () => {\n    let { status } = await Location.requestForegroundPermissionsAsync();\n    if (status !== \"granted\") {\n      setErrorMsg(\"Permission to access location was denied\");\n      return;\n    }\n\n    let location = await Location.getCurrentPositionAsync({\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 10000,\n    });\n    let Address = await Location.reverseGeocodeAsync({\n      latitude: SelectedWarehouse.latitude,\n      longitude: SelectedWarehouse.longitude,\n    });\n    setAddress(\n      Address[0].street == null || Address[0].street == \"\"\n        ? \"\"\n        : Address[0].street + \" \" + Address[0].city + \" \" + Address[0].country\n    );\n    calculatePreciseDistance(\n      SelectedWarehouse.latitude,\n      SelectedWarehouse.longitude\n    );\n    setspeed(\n      location.coords.speed < 1\n        ? 1\n        : parseFloat(location.coords.speed).toFixed(6)\n    );\n    setLat(location.coords.latitude);\n    setLong(location.coords.longitude);\n    setLocation(location);\n    console.log(location.coords);\n    console.log(\"Address\", Address[0].street);\n    console.log(\"selected store\", SelectedWarehouse);\n\n    setPin({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n    });\n  }, [1]); ////pin, SelectedWarehouse, Address, distance, speed\n\n  const Rote_button_press = () => {\n    {\n      const resetAction = CommonActions.reset({\n        index: 0,\n        routes: [{ name: \"Home\" }],\n      });\n      navigation.dispatch(resetAction);\n      Toast.show(\"Recycle order delivered to warehouse\");\n    }\n  };\n\n  const navigation = useNavigation();\n  if (pin == \"\" || pin == undefined) {\n    return (\n      <ActivityIndicator\n        style={{ flex: 1 }}\n        size=\"large\"\n        color={GlobalColors.Green}\n      ></ActivityIndicator>\n    );\n  } else {\n    return (\n      <View\n        style={[\n          Route_Start_Styles.container,\n          {\n            // Try setting `flexDirection` to `\"row\"`.\n            flexDirection: \"column\",\n          },\n        ]}\n      >\n        <Header_Global\n          Title={strings.WAREHOUSEHOUSELCOAITON}\n          BackIcon={true}\n          Onpress={() => {\n            navigation.navigate(\"Warehouse_Location\");\n          }}\n        />\n        <View style={Route_Start_Styles.innerContainer}>\n          <View style={Route_Start_Styles.mapview}>\n            <MapView\n              provider={PROVIDER_GOOGLE}\n              showsTraffic={true}\n              followsUserLocation={true}\n              showsCompass={true}\n              showsPointsOfInterest={false}\n              showsUserLocation={true}\n              style={{ height: \"100%\", width: \"100%\", borderRadius: 6 }}\n              initialRegion={{\n                latitude: pin.latitude,\n                longitude: pin.longitude,\n                latitudeDelta: 0.04,\n                longitudeDelta: 0.05,\n              }}\n              onUserLocationChange={(e) => {\n                console.log(\"onUserLocationChange\", e.nativeEvent.coordinate);\n                setPin({\n                  latitude: e.nativeEvent.coordinate.latitude,\n                  longitude: e.nativeEvent.coordinate.longitude,\n                  latitudeDelta: e.nativeEvent.coordinate.latitudeDelta,\n                  longitudeDelta: e.nativeEvent.coordinate.longitudeDelta,\n                });\n              }}\n              // onPress={(event) => {\n              //   let location = event.nativeEvent.coordinate;\n              //   console.log(\"Updated Location\", location.latitude);\n              //   let lat, long;\n              //   lat = location.latitude;\n              //   long = location.longitude;\n              //   getAddres(parseInt(lat), parseInt(long));\n              //   //  Address = Location.reverseGeocodeAsync(location);\n              //   setPin(event.nativeEvent.coordinate);\n              // }}\n            >\n              <Marker\n                coordinate={SelectedWarehouse}\n                title={\"Your Location\"}\n                pinColor=\"green\"\n                description=\"David John\"\n                onPress={(event) => {\n                  let location = event.nativeEvent.coordinate;\n\n                  console.log(\"Updated Location\", location.latitude);\n                  let lat, long;\n                  lat = SelectedWarehouse.latitude;\n                  long = SelectedWarehouse.longitude;\n                  // getAddres(parseFloat(lat), parseFloat(long));\n                  //  Address = Location.reverseGeocodeAsync(location);\n                }}\n              />\n\n              <Circle\n                center={pin}\n                radius={200}\n                strokeColor=\"green\"\n                strokeWidth={0.5}\n              />\n              {/* <MapViewDirections\n              origin={pin}\n              destination={SelectedWarehouse}\n              apikey={apiKey}\n            /> */}\n            </MapView>\n          </View>\n          <View style={Route_Start_Styles.routedetails}>\n            <View style={Route_Start_Styles.innerContainerAddress}>\n              {\n                <Image\n                  style={{ marginRight: \"3%\", height: 24, width: 24 }}\n                  source={require(\"../../../../assets/location.png\")}\n                ></Image>\n              }\n              {\n                <Text\n                  style={{\n                    color: \"#6E6E6E\",\n                    fontSize: 14,\n                    fontFamily: \"Poppins_500Medium\",\n                  }}\n                >\n                  {Address}\n                </Text>\n              }\n            </View>\n            <View style={Route_Start_Styles.innerContainerrow}>\n              <View style={Route_Start_Styles.innerContainerroute}>\n                {\n                  <Image\n                    style={{ marginRight: \"3%\", height: 24, width: 26 }}\n                    source={require(\"../../../../assets/navroute.png\")}\n                  ></Image>\n                }\n                {\n                  <Text\n                    style={{\n                      color: \"#6E6E6E\",\n                      fontSize: 14,\n                      paddingTop: 8,\n                      paddingLeft: 8,\n\n                      fontFamily: \"Poppins_500Medium\",\n                    }}\n                  >\n                    {distance / 1000}km\n                  </Text>\n                }\n              </View>\n              <View style={Route_Start_Styles.innerContainertime}>\n                {\n                  <Image\n                    style={{ marginLeft: \"3%\", height: 24, width: 24 }}\n                    source={require(\"../../../../assets/time.png\")}\n                  ></Image>\n                }\n                {\n                  <Text\n                    style={{\n                      color: \"#6E6E6E\",\n                      fontSize: 14,\n                      paddingLeft: 8,\n                      fontFamily: \"Poppins_500Medium\",\n                    }}\n                  >\n                    {parseFloat(Time).toFixed(0)} Min\n                  </Text>\n                }\n              </View>\n            </View>\n          </View>\n\n          {/* <View style={{ marginTop: \"2%\", marginRight: \"5%\", marginLeft: \"5%\" }}>\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <TouchableOpacity\n              style={styles.Button}\n              onPress={() => navigation.navigate(\"Add_Request\")}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Image\n                  style={{ marginRight: \"2%\" }}\n                  source={require(\"../../assets/addreq.png\")}\n                ></Image>\n                <Text\n                  style={{\n                    color: \"black\",\n                    fontSize: 12,\n                    fontFamily: \"Poppins_600SemiBold\",\n                  }}\n                >\n                  Add Request\n                </Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.Buttongreen}\n              onPress={() => navigation.navigate(\"False_Request\")}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    color: \"white\",\n                    fontSize: 12,\n                    fontFamily: \"Poppins_600SemiBold\",\n                  }}\n                >\n                  False Request\n                </Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View style={{ marginTop: \"3%\", marginRight: \"5%\", marginLeft: \"5%\" }}>\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <TouchableOpacity\n              style={styles.Button}\n              onPress={() => Rote_button_press()}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    color: \"black\",\n                    fontSize: 12,\n                    fontFamily: \"Poppins_600SemiBold\",\n                  }}\n                >\n                  End Route\n                </Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.Buttongreen}\n              onPress={() => navigation.navigate(\"Receive_Items\")}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    color: \"white\",\n                    fontSize: 12,\n                    fontFamily: \"Poppins_600SemiBold\",\n                  }}\n                >\n                  Receive items\n                </Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View> */}\n          <View\n            style={{\n              marginTop: \"3%\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TouchableOpacity\n              style={GlobalStyles.ButtonMain}\n              onPress={() => Rote_button_press()}\n            >\n              <Text style={GlobalStyles.ButtonTextMain}>\n                {strings.DELIVERITEMS}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}