{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessible\", \"android_disableSound\", \"android_ripple\", \"children\", \"delayLongPress\", \"disabled\", \"focusable\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"pressRetentionOffset\", \"style\", \"testOnly_pressed\", \"unstable_pressDelay\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { useMemo, useState, useRef, useImperativeHandle } from 'react';\nimport useAndroidRippleForView from \"./useAndroidRippleForView\";\nimport { PressabilityDebugView } from \"../../Pressability/PressabilityDebug\";\nimport usePressability from \"../../Pressability/usePressability\";\nimport { normalizeRect } from \"../../StyleSheet/Rect\";\nimport View from \"../View/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Pressable(props, forwardedRef) {\n  var accessible = props.accessible,\n    android_disableSound = props.android_disableSound,\n    android_ripple = props.android_ripple,\n    children = props.children,\n    delayLongPress = props.delayLongPress,\n    disabled = props.disabled,\n    focusable = props.focusable,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    _onPressIn = props.onPressIn,\n    _onPressOut = props.onPressOut,\n    pressRetentionOffset = props.pressRetentionOffset,\n    style = props.style,\n    testOnly_pressed = props.testOnly_pressed,\n    unstable_pressDelay = props.unstable_pressDelay,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var viewRef = useRef(null);\n  useImperativeHandle(forwardedRef, function () {\n    return viewRef.current;\n  });\n  var android_rippleConfig = useAndroidRippleForView(android_ripple, viewRef);\n  var _usePressState = usePressState(testOnly_pressed === true),\n    _usePressState2 = _slicedToArray(_usePressState, 2),\n    pressed = _usePressState2[0],\n    setPressed = _usePressState2[1];\n  var hitSlop = normalizeRect(props.hitSlop);\n  var restPropsWithDefaults = _objectSpread(_objectSpread(_objectSpread({}, restProps), android_rippleConfig == null ? void 0 : android_rippleConfig.viewProps), {}, {\n    accessible: accessible !== false,\n    focusable: focusable !== false,\n    hitSlop: hitSlop\n  });\n  var config = useMemo(function () {\n    return {\n      disabled: disabled,\n      hitSlop: hitSlop,\n      pressRectOffset: pressRetentionOffset,\n      android_disableSound: android_disableSound,\n      delayLongPress: delayLongPress,\n      delayPressIn: unstable_pressDelay,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressIn: function onPressIn(event) {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressIn(event);\n        }\n        setPressed(true);\n        if (_onPressIn != null) {\n          _onPressIn(event);\n        }\n      },\n      onPressMove: android_rippleConfig == null ? void 0 : android_rippleConfig.onPressMove,\n      onPressOut: function onPressOut(event) {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressOut(event);\n        }\n        setPressed(false);\n        if (_onPressOut != null) {\n          _onPressOut(event);\n        }\n      }\n    };\n  }, [android_disableSound, android_rippleConfig, delayLongPress, disabled, hitSlop, onLongPress, onPress, _onPressIn, _onPressOut, pressRetentionOffset, setPressed, unstable_pressDelay]);\n  var eventHandlers = usePressability(config);\n  return _jsxs(View, _objectSpread(_objectSpread(_objectSpread({}, restPropsWithDefaults), eventHandlers), {}, {\n    ref: viewRef,\n    style: typeof style === 'function' ? style({\n      pressed: pressed\n    }) : style,\n    collapsable: false,\n    children: [typeof children === 'function' ? children({\n      pressed: pressed\n    }) : children, __DEV__ ? _jsx(PressabilityDebugView, {\n      color: \"red\",\n      hitSlop: hitSlop\n    }) : null]\n  }));\n}\nfunction usePressState(forcePressed) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    pressed = _useState2[0],\n    setPressed = _useState2[1];\n  return [pressed || forcePressed, setPressed];\n}\nvar MemoedPressable = React.memo(React.forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\nexport default MemoedPressable;","map":{"version":3,"names":["_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useMemo","useState","useRef","useImperativeHandle","useAndroidRippleForView","PressabilityDebugView","usePressability","normalizeRect","View","jsx","_jsx","jsxs","_jsxs","Pressable","props","forwardedRef","accessible","android_disableSound","android_ripple","children","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","pressRetentionOffset","style","testOnly_pressed","unstable_pressDelay","restProps","viewRef","current","android_rippleConfig","_usePressState","usePressState","_usePressState2","pressed","setPressed","hitSlop","restPropsWithDefaults","viewProps","config","pressRectOffset","delayPressIn","event","onPressMove","eventHandlers","ref","collapsable","__DEV__","color","forcePressed","_useState","_useState2","MemoedPressable","memo","forwardRef","displayName"],"sources":["C:/Users/Ayamo/Downloads/driver-master/node_modules/react-native/Libraries/Components/Pressable/Pressable.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport {useMemo, useState, useRef, useImperativeHandle} from 'react';\nimport useAndroidRippleForView, {\n  type RippleConfig,\n} from './useAndroidRippleForView';\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityRole,\n  AccessibilityState,\n  AccessibilityValue,\n} from '../View/ViewAccessibility';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport usePressability from '../../Pressability/usePressability';\nimport {normalizeRect, type RectOrSize} from '../../StyleSheet/Rect';\nimport type {LayoutEvent, PressEvent} from '../../Types/CoreEventTypes';\nimport View from '../View/View';\n\ntype ViewStyleProp = $ElementType<React.ElementConfig<typeof View>, 'style'>;\n\nexport type StateCallbackType = $ReadOnly<{|\n  pressed: boolean,\n|}>;\n\ntype Props = $ReadOnly<{|\n  /**\n   * Accessibility.\n   */\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  accessibilityElementsHidden?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityLiveRegion?: ?('none' | 'polite' | 'assertive'),\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityValue?: ?AccessibilityValue,\n  accessibilityViewIsModal?: ?boolean,\n  accessible?: ?boolean,\n  focusable?: ?boolean,\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n\n  /**\n   * Either children or a render prop that receives a boolean reflecting whether\n   * the component is currently pressed.\n   */\n  children: React.Node | ((state: StateCallbackType) => React.Node),\n\n  /**\n   * Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.\n   */\n  delayLongPress?: ?number,\n\n  /**\n   * Whether the press behavior is disabled.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Additional distance outside of this view in which a press is detected.\n   */\n  hitSlop?: ?RectOrSize,\n\n  /**\n   * Additional distance outside of this view in which a touch is considered a\n   * press before `onPressOut` is triggered.\n   */\n  pressRetentionOffset?: ?RectOrSize,\n\n  /**\n   * Called when this view's layout changes.\n   */\n  onLayout?: ?(event: LayoutEvent) => void,\n\n  /**\n   * Called when a long-tap gesture is detected.\n   */\n  onLongPress?: ?(event: PressEvent) => void,\n\n  /**\n   * Called when a single tap gesture is detected.\n   */\n  onPress?: ?(event: PressEvent) => void,\n\n  /**\n   * Called when a touch is engaged before `onPress`.\n   */\n  onPressIn?: ?(event: PressEvent) => void,\n\n  /**\n   * Called when a touch is released before `onPress`.\n   */\n  onPressOut?: ?(event: PressEvent) => void,\n\n  /**\n   * Either view styles or a function that receives a boolean reflecting whether\n   * the component is currently pressed and returns view styles.\n   */\n  style?: ViewStyleProp | ((state: StateCallbackType) => ViewStyleProp),\n\n  /**\n   * Identifier used to find this view in tests.\n   */\n  testID?: ?string,\n\n  /**\n   * If true, doesn't play system sound on touch.\n   */\n  android_disableSound?: ?boolean,\n\n  /**\n   * Enables the Android ripple effect and configures its color.\n   */\n  android_ripple?: ?RippleConfig,\n\n  /**\n   * Used only for documentation or testing (e.g. snapshot testing).\n   */\n  testOnly_pressed?: ?boolean,\n\n  /**\n   * Duration to wait after press down before calling `onPressIn`.\n   */\n  unstable_pressDelay?: ?number,\n|}>;\n\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(props: Props, forwardedRef): React.Node {\n  const {\n    accessible,\n    android_disableSound,\n    android_ripple,\n    children,\n    delayLongPress,\n    disabled,\n    focusable,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    pressRetentionOffset,\n    style,\n    testOnly_pressed,\n    unstable_pressDelay,\n    ...restProps\n  } = props;\n\n  const viewRef = useRef<React.ElementRef<typeof View> | null>(null);\n  useImperativeHandle(forwardedRef, () => viewRef.current);\n\n  const android_rippleConfig = useAndroidRippleForView(android_ripple, viewRef);\n\n  const [pressed, setPressed] = usePressState(testOnly_pressed === true);\n\n  const hitSlop = normalizeRect(props.hitSlop);\n\n  const restPropsWithDefaults: React.ElementConfig<typeof View> = {\n    ...restProps,\n    ...android_rippleConfig?.viewProps,\n    accessible: accessible !== false,\n    focusable: focusable !== false,\n    hitSlop,\n  };\n\n  const config = useMemo(\n    () => ({\n      disabled,\n      hitSlop,\n      pressRectOffset: pressRetentionOffset,\n      android_disableSound,\n      delayLongPress,\n      delayPressIn: unstable_pressDelay,\n      onLongPress,\n      onPress,\n      onPressIn(event: PressEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressIn(event);\n        }\n        setPressed(true);\n        if (onPressIn != null) {\n          onPressIn(event);\n        }\n      },\n      onPressMove: android_rippleConfig?.onPressMove,\n      onPressOut(event: PressEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressOut(event);\n        }\n        setPressed(false);\n        if (onPressOut != null) {\n          onPressOut(event);\n        }\n      },\n    }),\n    [\n      android_disableSound,\n      android_rippleConfig,\n      delayLongPress,\n      disabled,\n      hitSlop,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      pressRetentionOffset,\n      setPressed,\n      unstable_pressDelay,\n    ],\n  );\n  const eventHandlers = usePressability(config);\n\n  return (\n    <View\n      {...restPropsWithDefaults}\n      {...eventHandlers}\n      ref={viewRef}\n      style={typeof style === 'function' ? style({pressed}) : style}\n      collapsable={false}>\n      {typeof children === 'function' ? children({pressed}) : children}\n      {__DEV__ ? <PressabilityDebugView color=\"red\" hitSlop={hitSlop} /> : null}\n    </View>\n  );\n}\n\nfunction usePressState(forcePressed: boolean): [boolean, (boolean) => void] {\n  const [pressed, setPressed] = useState(false);\n  return [pressed || forcePressed, setPressed];\n}\n\nconst MemoedPressable = React.memo(React.forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\n\nexport default (MemoedPressable: React.AbstractComponent<\n  Props,\n  React.ElementRef<typeof View>,\n>);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}