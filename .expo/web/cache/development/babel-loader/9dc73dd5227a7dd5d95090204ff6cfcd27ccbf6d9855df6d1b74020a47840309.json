{"ast":null,"code":"import * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Badge } from \"react-native-elements\";\nimport { CommonActions, DrawerActions } from \"@react-navigation/native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport GlobalStyles from \"../Utils/GlobalStyles\";\nimport GlobalColors from \"../Utils/GlobalColors\";\nimport { useSelector } from \"react-redux\";\nimport strings from \"../constants/lng/LocalizedStrings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CustomTabBar = function CustomTabBar(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useSelector = useSelector(function (state) {\n      return state.driverdetails;\n    }),\n    notificationcount = _useSelector.notificationcount;\n  var onPressMore = function onPressMore() {\n    navigation.dispatch(DrawerActions.toggleDrawer());\n  };\n  return _jsx(View, {\n    style: styles.mainContainer,\n    children: _jsxs(View, {\n      style: styles.shadowbox,\n      children: [_jsx(View, {\n        style: styles.childContainer,\n        children: _jsxs(Pressable, {\n          style: {\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\"\n          },\n          hitSlop: 40,\n          onPress: function onPress() {\n            onPressMore();\n          },\n          children: [_jsx(Image, {\n            source: require(\"../assets/Settings_Icon.png\"),\n            resizeMode: \"contain\",\n            style: GlobalStyles.TabBarIcon\n          }), _jsx(Text, {\n            style: {\n              fontFamily: \"Poppins_500Medium\",\n              fontSize: 10,\n              paddingTop: \"0.7%\"\n            },\n            children: strings.SETTING\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.childContainer,\n        children: _jsxs(Pressable, {\n          style: {\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\"\n          },\n          hitSlop: 20,\n          onPress: function onPress() {\n            var resetAction = CommonActions.reset({\n              index: 0,\n              routes: [{\n                name: \"Home\"\n              }]\n            });\n            navigation.dispatch(resetAction);\n          },\n          children: [_jsx(Image, {\n            source: require(\"../assets/Home_Icon.png\"),\n            resizeMode: \"contain\",\n            style: GlobalStyles.TabBarIcon\n          }), _jsx(Text, {\n            style: {\n              fontFamily: \"Poppins_500Medium\",\n              fontSize: 10\n            },\n            children: strings.HOME\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.childContainer,\n        children: _jsxs(Pressable, {\n          style: {\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\"\n          },\n          hitSlop: 20,\n          onPress: function onPress() {\n            navigation.navigate(\"Notifications\");\n          },\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Image, {\n              source: require(\"../assets/Notifications_Icon.png\"),\n              resizeMode: \"contain\",\n              style: GlobalStyles.TabBarIcon\n            }), _jsx(Badge, {\n              value: notificationcount,\n              status: \"error\",\n              badgeStyle: {\n                backgroundColor: \"#51AB1D\"\n              },\n              containerStyle: styles.badgeStyle\n            })]\n          }), _jsx(Text, {\n            style: {\n              fontFamily: \"Poppins_500Medium\",\n              fontSize: 10,\n              paddingTop: \"0.7%\"\n            },\n            children: strings.NOTIFICATIONS\n          })]\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  mainContainer: {\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    shadowColor: GlobalColors.TXTGray,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  shadowbox: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-around\",\n    marginTop: 7,\n    backgroundColor: \"white\"\n  },\n  badgeStyle: {\n    position: \"absolute\",\n    top: -8,\n    right: -12\n  },\n  childContainer: {\n    marginTop: \"2%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","View","Image","Pressable","Text","ImageBackground","StyleSheet","Badge","CommonActions","DrawerActions","MaterialIcons","Ionicons","GlobalStyles","GlobalColors","useSelector","strings","jsx","_jsx","jsxs","_jsxs","CustomTabBar","_ref","navigation","route","_useSelector","state","driverdetails","notificationcount","onPressMore","dispatch","toggleDrawer","style","styles","mainContainer","children","shadowbox","childContainer","justifyContent","alignContent","alignItems","hitSlop","onPress","source","require","resizeMode","TabBarIcon","fontFamily","fontSize","paddingTop","SETTING","resetAction","reset","index","routes","name","HOME","navigate","flexDirection","value","status","badgeStyle","backgroundColor","containerStyle","NOTIFICATIONS","create","borderTopLeftRadius","borderTopRightRadius","shadowColor","TXTGray","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginTop","position","top","right"],"sources":["C:/Users/Ayamo/Downloads/driver-master/Components/CustomTabBar.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Image,\n  Pressable,\n  Text,\n  ImageBackground,\n  StyleSheet,\n} from \"react-native\";\nimport { Badge } from \"react-native-elements\";\n// import GlobalStyles from \"../utils/GlobalStyles\";\nimport { CommonActions, DrawerActions } from \"@react-navigation/native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport GlobalStyles from \"../Utils/GlobalStyles\";\nimport GlobalColors from \"../Utils/GlobalColors\";\nimport { useSelector } from \"react-redux\";\nimport strings from \"../constants/lng/LocalizedStrings\";\nexport const CustomTabBar = ({ navigation, route }) => {\n  const { notificationcount } = useSelector((state) => state.driverdetails);\n  // const islogin=useSelector(state=>state.login);\n\n  const onPressMore = () => {\n    navigation.dispatch(DrawerActions.toggleDrawer());\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <View style={styles.shadowbox}>\n        <View style={styles.childContainer}>\n          <Pressable\n            style={{\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n            hitSlop={40}\n            onPress={() => {\n              onPressMore();\n            }}\n          >\n            <Image\n              source={require(\"../assets/Settings_Icon.png\")}\n              resizeMode=\"contain\"\n              style={GlobalStyles.TabBarIcon}\n            />\n\n            <Text\n              style={{\n                fontFamily: \"Poppins_500Medium\",\n                fontSize: 10,\n                paddingTop: \"0.7%\",\n              }}\n            >\n              {strings.SETTING}\n            </Text>\n          </Pressable>\n        </View>\n\n        <View style={styles.childContainer}>\n          <Pressable\n            style={{\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n            hitSlop={20}\n            onPress={() => {\n              const resetAction = CommonActions.reset({\n                index: 0,\n                routes: [{ name: \"Home\" }],\n              });\n              navigation.dispatch(resetAction);\n\n              // navigation.navigate(\"BottomTabNavigation\", { screen: \"Home\" });\n            }}\n          >\n            <Image\n              source={require(\"../assets/Home_Icon.png\")}\n              resizeMode=\"contain\"\n              style={GlobalStyles.TabBarIcon}\n            />\n            <Text style={{ fontFamily: \"Poppins_500Medium\", fontSize: 10 }}>\n              {strings.HOME}\n            </Text>\n          </Pressable>\n        </View>\n\n        <View style={styles.childContainer}>\n          <Pressable\n            style={{\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n            hitSlop={20}\n            onPress={() => {\n              navigation.navigate(\"Notifications\");\n            }}\n          >\n            <View style={{ flexDirection: \"row\" }}>\n              <Image\n                source={require(\"../assets/Notifications_Icon.png\")}\n                resizeMode=\"contain\"\n                style={GlobalStyles.TabBarIcon}\n              />\n              <Badge\n                value={notificationcount}\n                status=\"error\"\n                badgeStyle={{ backgroundColor: \"#51AB1D\" }}\n                containerStyle={styles.badgeStyle}\n              />\n            </View>\n\n            <Text\n              style={{\n                fontFamily: \"Poppins_500Medium\",\n                fontSize: 10,\n                paddingTop: \"0.7%\",\n              }}\n            >\n              {strings.NOTIFICATIONS}\n            </Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  mainContainer: {\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    shadowColor: GlobalColors.TXTGray,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.4,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  shadowbox: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-around\",\n    marginTop: 7,\n    backgroundColor: \"white\",\n  },\n  badgeStyle: {\n    position: \"absolute\",\n    top: -8,\n    right: -12,\n  },\n  childContainer: {\n    marginTop: \"2%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}