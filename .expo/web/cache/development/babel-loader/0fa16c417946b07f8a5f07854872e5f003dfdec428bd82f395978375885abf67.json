{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as geolib from \"geolib\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\nimport MapView, { Circle, Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport { useSelector } from \"react-redux\";\nimport * as Location from \"expo-location\";\nimport Toast from \"react-native-root-toast\";\nimport GlobalColors from \"../../../../Utils/GlobalColors\";\nimport GlobalStyles from \"../../../../Utils/GlobalStyles\";\nimport Warehouse_Location_Styles from \"./Warehouse_Location_Styles\";\nimport Customers_Location_Styles from \"../../Pickup_Requests/PickupReq/Customers_Location/Customers_Location_Styles\";\nimport ApiController from \"../../../../Api/ApiController\";\nimport OwnStorage from \"../../../../Api/StorageController\";\nimport Header_Global from \"../../../../Components/Header_Global\";\nimport strings from \"../../../../constants/lng/LocalizedStrings\";\nimport Geocoder from \"react-native-geocoding\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Warehouse_Location(_ref) {\n  var route = _ref.route;\n  var mapref = useRef(null);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    MarkerDriver = _useState2[0],\n    setMarkerDriver = _useState2[1];\n  var warehouses = route.params.warehouses;\n  var Response = route.params.Response;\n  var api = new ApiController();\n  var localdata = new OwnStorage();\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    speed = _useState4[0],\n    setspeed = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    RouteStart = _useState6[0],\n    setRouteStart = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showloaderM = _useState8[0],\n    setshowloaderM = _useState8[1];\n  Geocoder.init(\"AIzaSyDXoHO79vxypTv8xL4V10cf5kFpIYDO9Rk\");\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    SelectedWarehouseLocation = _useState10[0],\n    SetSelectedWarehouseLocation = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    SelecteditemType = _useState12[0],\n    SetSelecteditemType = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    SelectedProductId = _useState14[0],\n    SetSelectedProductId = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    MarkersList = _useState16[0],\n    setMarkersList = _useState16[1];\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    Time = _useState18[0],\n    SetTime = _useState18[1];\n  var _useState19 = useState(),\n    _useState20 = _slicedToArray(_useState19, 2),\n    pin = _useState20[0],\n    setPin = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    distance = _useState22[0],\n    setdistance = _useState22[1];\n  var _useState23 = useState(null),\n    _useState24 = _slicedToArray(_useState23, 2),\n    location = _useState24[0],\n    setLocation = _useState24[1];\n  var _useState25 = useState(\"Warehouse Location\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    Address = _useState26[0],\n    setAddress = _useState26[1];\n  var _useState27 = useState(null),\n    _useState28 = _slicedToArray(_useState27, 2),\n    lat = _useState28[0],\n    setLat = _useState28[1];\n  var _useState29 = useState(null),\n    _useState30 = _slicedToArray(_useState29, 2),\n    long = _useState30[0],\n    setLong = _useState30[1];\n  useEffect(function _callee() {\n    var _await$Location$reque, status, location, Address;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n          case 2:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n            if (!(status !== \"granted\")) {\n              _context.next = 7;\n              break;\n            }\n            setErrorMsg(\"Permission to access location was denied\");\n            return _context.abrupt(\"return\");\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n              enableHighAccuracy: true,\n              timeout: 15000,\n              maximumAge: 10000\n            }));\n          case 9:\n            location = _context.sent;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync(location.coords));\n          case 12:\n            Address = _context.sent;\n            setspeed(location.coords.speed < 1 ? 1 : parseFloat(location.coords.speed).toFixed(6));\n            setLat(location.coords.latitude);\n            setLong(location.coords.longitude);\n            setLocation(location);\n            setPin({\n              latitude: location.coords.latitude,\n              longitude: location.coords.longitude,\n              latitudeDelta: location.coords.latitudeDelta,\n              longitudeDelta: location.coords.longitudeDelta\n            });\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [1]);\n  var calculatePreciseDistance = function calculatePreciseDistance(lat, long) {\n    var pdis = geolib.getDistance({\n      latitude: pin.latitude,\n      longitude: pin.longitude\n    }, {\n      latitude: lat,\n      longitude: long\n    });\n    setdistance(pdis);\n    SetTime(pdis / speed / 60);\n  };\n  var getAddres = function getAddres(lat, long) {\n    var Address;\n    return _regeneratorRuntime.async(function getAddres$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              latitude: lat,\n              longitude: long\n            }));\n          case 2:\n            Address = _context2.sent;\n            setAddress(Address[0].street + \" \" + Address[0].city + \" \" + Address[0].country);\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var Rote_button_press = function Rote_button_press() {\n    if (SelectedWarehouseLocation == null || SelectedWarehouseLocation == undefined) {\n      Toast.show(\"Please select warehouse to start route\");\n    } else {\n      setRouteStart(true);\n    }\n  };\n  var Deliver_button_press = function Deliver_button_press() {\n    var token, formdata, path;\n    return _regeneratorRuntime.async(function Deliver_button_press$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setshowloaderM(true);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(localdata.getvalue(\"api_token_Driver\"));\n          case 3:\n            token = _context3.sent;\n            console.log(\"Response id\", Response.id);\n            console.log(\"Response products\", SelectedProductId);\n            formdata = new FormData();\n            formdata.append(\"_method\", \"PATCH\");\n            path = \"recycles/\" + Response.id + \" /products/\" + SelectedProductId + \"/status/Delivered\";\n            api.DeliverItems(token, path, formdata).then(function (response) {\n              setshowloaderM(false);\n              var resetAction = CommonActions.reset({\n                index: 0,\n                routes: [{\n                  name: \"Home\"\n                }]\n              });\n              navigation.dispatch(resetAction);\n              Toast.show(\"Request marked as Delivered\");\n            }).catch(function (error) {\n              setshowloaderM(false);\n              if (error.response.status == 401) {\n                Toast.show(\"You are Blocked by the Admin\");\n                navigation.navigate(\"Login\");\n              }\n              console.log(\"error\", error);\n              for (var _i = 0, _Object$entries = Object.entries(error); _i < _Object$entries.length; _i++) {\n                var _ref2 = _Object$entries[_i];\n                var _ref3 = _slicedToArray(_ref2, 2);\n                var key = _ref3[0];\n                var value = _ref3[1];\n                console.log(key + \": \" + value);\n                Toast.show(key + \": \" + value);\n              }\n            });\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var navigation = useNavigation();\n  var renderItems_marker = function renderItems_marker(item, i) {\n    return _jsxs(MapView.Marker, {\n      identifier: \"mk1\",\n      coordinate: item,\n      pinColor: GlobalColors.Green,\n      onPress: function onPress(event) {\n        SetSelecteditemType(item.item_type);\n        var location = event.nativeEvent.coordinate;\n        SetSelectedWarehouseLocation(event.nativeEvent.coordinate);\n        var lat, long;\n        lat = item.latitude;\n        long = item.longitude;\n        Geocoder.from(parseFloat(lat), parseFloat(long)).then(function (json) {\n          var addressComponent = json.results[0].formatted_address;\n          console.log(addressComponent);\n          setAddress(addressComponent);\n        }).catch(function (error) {\n          return console.warn(error);\n        });\n        calculatePreciseDistance(lat, long);\n        var Products = Response.products;\n        var Result = Products.filter(function (value) {\n          console.log(\"value.item_type_id\", value.item_type_id);\n          console.log(\"item.item_type_id\", item);\n          return value.item_type_id === item.item_type;\n        });\n        console.log(\"Result\", Result);\n        SetSelectedProductId(Result[0].id);\n      },\n      children: [_jsx(Text, {\n        style: {\n          backgroundColor: \"green\",\n          color: \"white\",\n          padding: 5,\n          borderWidth: 1,\n          borderColor: \"yellow\",\n          fontSize: 12,\n          fontWeight: \"bold\",\n          alignSelf: \"center\"\n        },\n        children: item.title\n      }), _jsx(Image, {\n        source: item.img ? {\n          uri: item.img\n        } : require(\"../../../../assets/glocation.png\"),\n        style: item.img ? Customers_Location_Styles.customercircularimg : {\n          height: 37.33,\n          width: 28,\n          alignSelf: \"center\"\n        }\n      })]\n    }, i);\n  };\n  if (pin == \"\" || pin == undefined) {\n    return _jsx(ActivityIndicator, {\n      style: {\n        flex: 1\n      },\n      size: \"large\",\n      color: GlobalColors.Green\n    });\n  } else {\n    return _jsxs(View, {\n      style: [Warehouse_Location_Styles.container, {\n        flexDirection: \"column\"\n      }],\n      children: [_jsx(Header_Global, {\n        Title: strings.WAREHOUSEHOUSELCOAITON,\n        BackIcon: true,\n        Onpress: function Onpress() {\n          var resetAction = CommonActions.reset({\n            index: 0,\n            routes: [{\n              name: \"VehicleLoad\"\n            }]\n          });\n          navigation.dispatch(resetAction);\n        }\n      }), _jsx(View, {\n        style: GlobalStyles.cardview,\n        children: _jsxs(View, {\n          style: [GlobalStyles.cardview, {\n            backgroundColor: \"white\",\n            marginTop: 10,\n            paddingTop: \"5%\"\n          }],\n          children: [_jsx(View, {\n            style: Warehouse_Location_Styles.mapview,\n            children: _jsxs(MapView, {\n              ref: mapref,\n              provider: PROVIDER_GOOGLE,\n              showsTraffic: true,\n              followsUserLocation: true,\n              showsCompass: true,\n              showsPointsOfInterest: false,\n              zoomControlEnabled: true,\n              showsUserLocation: true,\n              style: {\n                height: \"100%\",\n                width: \"100%\",\n                borderRadius: 6\n              },\n              onLayout: function onLayout() {\n                setMarkerDriver(pin);\n                mapref.current.fitToCoordinates([{\n                  latitude: pin.latitude,\n                  longitude: pin.longitude\n                }, warehouses[0]], {\n                  edgePadding: {\n                    top: 50,\n                    right: 50,\n                    bottom: 50,\n                    left: 50\n                  }\n                });\n              },\n              onUserLocationChange: function onUserLocationChange(e) {\n                setPin({\n                  latitude: e.nativeEvent.coordinate.latitude,\n                  longitude: e.nativeEvent.coordinate.longitude,\n                  latitudeDelta: 0.005,\n                  longitudeDelta: 0.005\n                });\n              },\n              children: [warehouses.map(renderItems_marker), MarkerDriver ? _jsx(Marker, {\n                coordinate: MarkerDriver,\n                title: \"My Location\",\n                identifier: \"mk2\"\n              }) : null]\n            })\n          }), _jsxs(View, {\n            style: Warehouse_Location_Styles.routedetails,\n            children: [_jsxs(View, {\n              style: Warehouse_Location_Styles.innerContainerAddress,\n              children: [_jsx(Image, {\n                style: {\n                  marginRight: \"3%\",\n                  height: 24,\n                  width: 24\n                },\n                source: require(\"../../../../assets/location.png\")\n              }), _jsx(Text, {\n                style: Warehouse_Location_Styles.txt_info_loc,\n                children: Address\n              })]\n            }), _jsxs(View, {\n              style: Warehouse_Location_Styles.innerContainerrow,\n              children: [_jsxs(View, {\n                style: Warehouse_Location_Styles.innerContainerroute,\n                children: [_jsx(Image, {\n                  style: {\n                    marginRight: \"3%\",\n                    height: 24,\n                    width: 26\n                  },\n                  source: require(\"../../../../assets/navroute.png\")\n                }), _jsxs(Text, {\n                  style: Warehouse_Location_Styles.txt_info_loc,\n                  children: [distance / 1000, \"km\"]\n                })]\n              }), _jsxs(View, {\n                style: Warehouse_Location_Styles.innerContainertime,\n                children: [_jsx(Image, {\n                  style: {\n                    marginLeft: \"3%\",\n                    height: 24,\n                    width: 24\n                  },\n                  source: require(\"../../../../assets/time.png\")\n                }), _jsxs(Text, {\n                  style: Warehouse_Location_Styles.txt_info_loc,\n                  children: [parseFloat(Time).toFixed(0), \" Min\"]\n                })]\n              })]\n            })]\n          }), _jsx(View, {\n            style: {\n              marginTop: \"5%\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            children: RouteStart ? _jsx(TouchableOpacity, {\n              style: Warehouse_Location_Styles.Button,\n              onPress: function onPress() {\n                Deliver_button_press();\n              },\n              children: _jsxs(View, {\n                style: [GlobalStyles.FlexDirectionRow],\n                children: [showloaderM && _jsx(ActivityIndicator, {\n                  size: \"small\",\n                  color: \"white\",\n                  style: [GlobalStyles.activityIndicator]\n                }), _jsx(Text, {\n                  style: GlobalStyles.ButtonTextMain,\n                  children: strings.DELIVERITEMS\n                })]\n              })\n            }) : _jsx(TouchableOpacity, {\n              style: Warehouse_Location_Styles.Button,\n              onPress: function onPress() {\n                return Rote_button_press();\n              },\n              children: _jsx(Text, {\n                style: GlobalStyles.ButtonTextMain,\n                children: strings.ROUTESTART\n              })\n            })\n          })]\n        })\n      })]\n    });\n  }\n}","map":{"version":3,"names":["geolib","React","useState","useEffect","useRef","CommonActions","useNavigation","MapView","Circle","Marker","PROVIDER_GOOGLE","useSelector","Location","Toast","GlobalColors","GlobalStyles","Warehouse_Location_Styles","Customers_Location_Styles","ApiController","OwnStorage","Header_Global","strings","Geocoder","jsx","_jsx","jsxs","_jsxs","Warehouse_Location","_ref","route","mapref","_useState","_useState2","_slicedToArray","MarkerDriver","setMarkerDriver","warehouses","params","Response","api","localdata","_useState3","_useState4","speed","setspeed","_useState5","_useState6","RouteStart","setRouteStart","_useState7","_useState8","showloaderM","setshowloaderM","init","_useState9","_useState10","SelectedWarehouseLocation","SetSelectedWarehouseLocation","_useState11","_useState12","SelecteditemType","SetSelecteditemType","_useState13","_useState14","SelectedProductId","SetSelectedProductId","_useState15","_useState16","MarkersList","setMarkersList","_useState17","_useState18","Time","SetTime","_useState19","_useState20","pin","setPin","_useState21","_useState22","distance","setdistance","_useState23","_useState24","location","setLocation","_useState25","_useState26","Address","setAddress","_useState27","_useState28","lat","setLat","_useState29","_useState30","long","setLong","_callee","_await$Location$reque","status","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","requestForegroundPermissionsAsync","sent","setErrorMsg","abrupt","getCurrentPositionAsync","enableHighAccuracy","timeout","maximumAge","reverseGeocodeAsync","coords","parseFloat","toFixed","latitude","longitude","latitudeDelta","longitudeDelta","stop","Promise","calculatePreciseDistance","pdis","getDistance","getAddres","getAddres$","_context2","street","city","country","Rote_button_press","undefined","show","Deliver_button_press","token","formdata","path","Deliver_button_press$","_context3","getvalue","console","log","id","FormData","append","DeliverItems","then","response","resetAction","reset","index","routes","name","navigation","dispatch","catch","error","navigate","_i","_Object$entries","Object","entries","length","_ref2","_ref3","key","value","renderItems_marker","item","i","identifier","coordinate","pinColor","Green","onPress","event","item_type","nativeEvent","from","json","addressComponent","results","formatted_address","warn","Products","products","Result","filter","item_type_id","children","Text","style","backgroundColor","color","padding","borderWidth","borderColor","fontSize","fontWeight","alignSelf","title","Image","source","img","uri","require","customercircularimg","height","width","ActivityIndicator","flex","size","View","container","flexDirection","Title","WAREHOUSEHOUSELCOAITON","BackIcon","Onpress","cardview","marginTop","paddingTop","mapview","ref","provider","showsTraffic","followsUserLocation","showsCompass","showsPointsOfInterest","zoomControlEnabled","showsUserLocation","borderRadius","onLayout","current","fitToCoordinates","edgePadding","top","right","bottom","left","onUserLocationChange","e","map","routedetails","innerContainerAddress","marginRight","txt_info_loc","innerContainerrow","innerContainerroute","innerContainertime","marginLeft","alignContent","alignItems","justifyContent","TouchableOpacity","Button","FlexDirectionRow","activityIndicator","ButtonTextMain","DELIVERITEMS","ROUTESTART"],"sources":["C:/Users/Ayamo/Downloads/driver-master/Screens/Home/Vehicle_Load/Warehouse_Location/Warehouse_Location.js"],"sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n  ScrollView,\n  ActivityIndicator,\n} from \"react-native\";\nimport * as geolib from \"geolib\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\nimport MapView, { Circle, Marker, PROVIDER_GOOGLE } from \"react-native-maps\";\nimport { useSelector } from \"react-redux\";\n\nimport * as Location from \"expo-location\";\n\nimport Toast from \"react-native-root-toast\";\nimport GlobalColors from \"../../../../Utils/GlobalColors\";\nimport GlobalStyles from \"../../../../Utils/GlobalStyles\";\nimport Warehouse_Location_Styles from \"./Warehouse_Location_Styles\";\nimport Customers_Location_Styles from \"../../Pickup_Requests/PickupReq/Customers_Location/Customers_Location_Styles\";\nimport ApiController from \"../../../../Api/ApiController\";\nimport OwnStorage from \"../../../../Api/StorageController\";\nimport Header_Global from \"../../../../Components/Header_Global\";\nimport strings from \"../../../../constants/lng/LocalizedStrings\";\nimport Geocoder from \"react-native-geocoding\";\n\nexport default function Warehouse_Location({ route }) {\n  const mapref = useRef(null);\n  const [MarkerDriver, setMarkerDriver] = useState();\n\n  const { warehouses } = route.params;\n  const { Response } = route.params;\n  var api = new ApiController();\n  var localdata = new OwnStorage();\n  const [speed, setspeed] = useState(1);\n  const [RouteStart, setRouteStart] = useState(false);\n  const [showloaderM, setshowloaderM] = useState(false);\n  Geocoder.init(\"AIzaSyDXoHO79vxypTv8xL4V10cf5kFpIYDO9Rk\");\n\n  const [SelectedWarehouseLocation, SetSelectedWarehouseLocation] = useState();\n  const [SelecteditemType, SetSelecteditemType] = useState();\n  const [SelectedProductId, SetSelectedProductId] = useState(\"\");\n\n  const [MarkersList, setMarkersList] = useState([]);\n  const [Time, SetTime] = useState(0);\n  const [pin, setPin] = useState();\n  const [distance, setdistance] = useState(0);\n  /////////////////////////////////for testing static markers\n\n  //////////////////////////////////Muhammad Asim/////////////////////////////\n  const [location, setLocation] = useState(null);\n  const [Address, setAddress] = useState(\"Warehouse Location\");\n  const [lat, setLat] = useState(null);\n  const [long, setLong] = useState(null);\n  useEffect(async () => {\n    let { status } = await Location.requestForegroundPermissionsAsync();\n    if (status !== \"granted\") {\n      setErrorMsg(\"Permission to access location was denied\");\n      return;\n    }\n\n    let location = await Location.getCurrentPositionAsync({\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 10000,\n    });\n    let Address = await Location.reverseGeocodeAsync(location.coords);\n    setspeed(\n      location.coords.speed < 1\n        ? 1\n        : parseFloat(location.coords.speed).toFixed(6)\n    );\n\n    // console.log(\"SPEEDINUSE\", speed);\n\n    // var time = distance / 30;\n    // var timeinminutes = time / 60;\n\n    // console.log(\"Tame\", timeinminutes);\n\n    // setAddress(\n    //   Address[0].street + \" \" + Address[0].city + \" , \" + Address[0].country\n    // );\n    setLat(location.coords.latitude);\n    setLong(location.coords.longitude);\n    setLocation(location);\n\n    setPin({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n      latitudeDelta: location.coords.latitudeDelta,\n      longitudeDelta: location.coords.longitudeDelta,\n    });\n  }, [1]); //////need to remove 1 if want to get continious location change by asim\n\n  const calculatePreciseDistance = (lat, long) => {\n    var pdis = geolib.getDistance(\n      { latitude: pin.latitude, longitude: pin.longitude },\n      { latitude: lat, longitude: long }\n    );\n\n    setdistance(pdis);\n\n    SetTime(pdis / speed / 60);\n    // (`Precise Distance\\n\\n${pdis} Meter\\nOR\\n${pdis / 1000} KM`);\n  };\n  const getAddres = async (lat, long) => {\n    let Address = await Location.reverseGeocodeAsync({\n      latitude: lat,\n      longitude: long,\n    });\n    setAddress(\n      Address[0].street + \" \" + Address[0].city + \" \" + Address[0].country\n    );\n  };\n\n  const Rote_button_press = () => {\n    if (\n      SelectedWarehouseLocation == null ||\n      SelectedWarehouseLocation == undefined\n    ) {\n      Toast.show(\"Please select warehouse to start route\");\n    } else {\n      setRouteStart(true);\n    }\n  };\n  const Deliver_button_press = async () => {\n    setshowloaderM(true);\n    var token = await localdata.getvalue(\"api_token_Driver\");\n    console.log(\"Response id\", Response.id);\n    console.log(\"Response products\", SelectedProductId);\n\n    const formdata = new FormData();\n    formdata.append(\"_method\", \"PATCH\");\n    let path =\n      \"recycles/\" +\n      Response.id +\n      \" /products/\" +\n      SelectedProductId +\n      \"/status/Delivered\";\n\n    // Toast.show(path);\n    api\n      .DeliverItems(token, path, formdata)\n      .then((response) => {\n        setshowloaderM(false);\n        const resetAction = CommonActions.reset({\n          index: 0,\n          routes: [{ name: \"Home\" }],\n        });\n        navigation.dispatch(resetAction);\n        Toast.show(\"Request marked as Delivered\");\n      })\n      .catch((error) => {\n        setshowloaderM(false);\n        if (error.response.status == 401) {\n          Toast.show(\"You are Blocked by the Admin\");\n          navigation.navigate(\"Login\");\n        }\n        console.log(\"error\", error);\n        for (const [key, value] of Object.entries(error)) {\n          console.log(`${key}: ${value}`);\n          Toast.show(`${key}: ${value}`);\n        }\n      });\n  };\n\n  const navigation = useNavigation();\n\n  const renderItems_marker = (item, i) => {\n    return (\n      <MapView.Marker\n        key={i}\n        identifier={\"mk1\"}\n        coordinate={item}\n        pinColor={GlobalColors.Green}\n        onPress={(event) => {\n          SetSelecteditemType(item.item_type);\n\n          let location = event.nativeEvent.coordinate;\n          SetSelectedWarehouseLocation(event.nativeEvent.coordinate);\n\n          // let t = Response?.products;\n          // let Tselection = [];\n          // for (let i = 0; i < t.length; i++) {\n          //   if (t[i].item_type == SelecteditemType && t[i].id !== undefined) {\n          //     let s = {\n          //       id: t[i].id,\n          //     };\n\n          //     Tselection.push(s.id);\n          //     SetSelectedProductId(Tselection);\n\n          //     console.log(SelectedProductId);\n          //   }\n          // }\n\n          let lat, long;\n          lat = item.latitude;\n          long = item.longitude;\n          // getAddres(parseFloat(lat), parseFloat(long));\n\n          Geocoder.from(parseFloat(lat), parseFloat(long))\n            .then((json) => {\n              const addressComponent = json.results[0].formatted_address;\n              console.log(addressComponent);\n\n              setAddress(addressComponent);\n            })\n            .catch((error) => console.warn(error));\n          //  Address = Location.reverseGeocodeAsync(location);\n          calculatePreciseDistance(lat, long);\n          const Products = Response.products;\n          const Result = Products.filter((value) => {\n            // console.log(\"valuetypeeee\", value);\n            // console.log(\"items\", item);\n\n            console.log(\"value.item_type_id\", value.item_type_id);\n            console.log(\"item.item_type_id\", item);\n\n            return value.item_type_id === item.item_type;\n          });\n\n          console.log(\"Result\", Result);\n          SetSelectedProductId(Result[0].id);\n        }}\n      >\n        <Text\n          style={{\n            backgroundColor: \"green\",\n            color: \"white\",\n            padding: 5,\n            borderWidth: 1,\n            borderColor: \"yellow\",\n            fontSize: 12,\n            fontWeight: \"bold\",\n            alignSelf: \"center\",\n          }}\n        >\n          {item.title}\n        </Text>\n        <Image\n          source={\n            item.img\n              ? { uri: item.img }\n              : require(\"../../../../assets/glocation.png\")\n          }\n          style={\n            item.img\n              ? Customers_Location_Styles.customercircularimg\n              : { height: 37.33, width: 28, alignSelf: \"center\" }\n          }\n        />\n      </MapView.Marker>\n    );\n  };\n  if (pin == \"\" || pin == undefined) {\n    return (\n      <ActivityIndicator\n        style={{ flex: 1 }}\n        size=\"large\"\n        color={GlobalColors.Green}\n      ></ActivityIndicator>\n    );\n  } else {\n    return (\n      <View\n        style={[\n          Warehouse_Location_Styles.container,\n          {\n            // Try setting `flexDirection` to `\"row\"`.\n            flexDirection: \"column\",\n          },\n        ]}\n      >\n        <Header_Global\n          Title={strings.WAREHOUSEHOUSELCOAITON}\n          BackIcon={true}\n          Onpress={() => {\n            const resetAction = CommonActions.reset({\n              index: 0,\n              routes: [{ name: \"VehicleLoad\" }],\n            });\n            navigation.dispatch(resetAction);\n          }}\n        />\n        <View style={GlobalStyles.cardview}>\n          <View\n            style={[\n              GlobalStyles.cardview,\n              { backgroundColor: \"white\", marginTop: 10, paddingTop: \"5%\" },\n            ]}\n          >\n            <View style={Warehouse_Location_Styles.mapview}>\n              <MapView\n                ref={mapref}\n                provider={PROVIDER_GOOGLE}\n                showsTraffic={true}\n                followsUserLocation={true}\n                showsCompass={true}\n                showsPointsOfInterest={false}\n                zoomControlEnabled={true}\n                showsUserLocation={true}\n                style={{ height: \"100%\", width: \"100%\", borderRadius: 6 }}\n                onLayout={() => {\n                  setMarkerDriver(pin);\n\n                  // console.log(\"mapdata\", mapref);\n\n                  mapref.current.fitToCoordinates(\n                    [\n                      { latitude: pin.latitude, longitude: pin.longitude },\n                      warehouses[0],\n                    ],\n                    {\n                      edgePadding: { top: 50, right: 50, bottom: 50, left: 50 },\n                    }\n                  );\n\n                  // mapref.current.fitToSuppliedMarkers([\"mk1\", \"mk2\"], {\n                  //   edgePadding: { top: 50, right: 50, bottom: 50, left: 50 },\n                  // });\n                }}\n                onUserLocationChange={(e) => {\n                  // console.log(\"onUserLocationChange\", e.nativeEvent.coordinate);\n                  setPin({\n                    latitude: e.nativeEvent.coordinate.latitude,\n                    longitude: e.nativeEvent.coordinate.longitude,\n                    latitudeDelta: 0.005,\n                    longitudeDelta: 0.005,\n                  });\n                }}\n              >\n                {warehouses.map(renderItems_marker)}\n\n                {MarkerDriver ? (\n                  <Marker\n                    coordinate={MarkerDriver}\n                    title=\"My Location\"\n                    identifier={\"mk2\"}\n                  ></Marker>\n                ) : null}\n              </MapView>\n            </View>\n            <View style={Warehouse_Location_Styles.routedetails}>\n              <View style={Warehouse_Location_Styles.innerContainerAddress}>\n                {\n                  <Image\n                    style={{ marginRight: \"3%\", height: 24, width: 24 }}\n                    source={require(\"../../../../assets/location.png\")}\n                  ></Image>\n                }\n                {\n                  <Text style={Warehouse_Location_Styles.txt_info_loc}>\n                    {Address}\n                  </Text>\n                }\n              </View>\n              <View style={Warehouse_Location_Styles.innerContainerrow}>\n                <View style={Warehouse_Location_Styles.innerContainerroute}>\n                  {\n                    <Image\n                      style={{ marginRight: \"3%\", height: 24, width: 26 }}\n                      source={require(\"../../../../assets/navroute.png\")}\n                    ></Image>\n                  }\n                  {\n                    <Text style={Warehouse_Location_Styles.txt_info_loc}>\n                      {distance / 1000}km\n                    </Text>\n                  }\n                </View>\n                <View style={Warehouse_Location_Styles.innerContainertime}>\n                  {\n                    <Image\n                      style={{ marginLeft: \"3%\", height: 24, width: 24 }}\n                      source={require(\"../../../../assets/time.png\")}\n                    ></Image>\n                  }\n                  {\n                    <Text style={Warehouse_Location_Styles.txt_info_loc}>\n                      {parseFloat(Time).toFixed(0)} Min\n                    </Text>\n                  }\n                </View>\n              </View>\n            </View>\n            <View\n              style={{\n                marginTop: \"5%\",\n                alignContent: \"center\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {RouteStart ? (\n                <TouchableOpacity\n                  style={Warehouse_Location_Styles.Button}\n                  onPress={() => {\n                    Deliver_button_press();\n                  }}\n                >\n                  <View style={[GlobalStyles.FlexDirectionRow]}>\n                    {showloaderM && (\n                      <ActivityIndicator\n                        size=\"small\"\n                        color=\"white\"\n                        style={[GlobalStyles.activityIndicator]}\n                      ></ActivityIndicator>\n                    )}\n                    <Text style={GlobalStyles.ButtonTextMain}>\n                      {strings.DELIVERITEMS}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ) : (\n                <TouchableOpacity\n                  style={Warehouse_Location_Styles.Button}\n                  onPress={() => Rote_button_press()}\n                >\n                  <Text style={GlobalStyles.ButtonTextMain}>\n                    {strings.ROUTESTART}\n                  </Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}