{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Controls(props) {\n  var styles = props.styles,\n    textStyles = props.textStyles,\n    label = props.label,\n    component = props.component,\n    onPressControl = props.onPressControl,\n    disabled = props.disabled;\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return onPressControl();\n    },\n    style: styles,\n    disabled: disabled,\n    hitSlop: {\n      top: 20,\n      bottom: 20,\n      left: 40,\n      right: 40\n    },\n    children: _jsx(View, {\n      style: {\n        opacity: disabled ? 0 : 1\n      },\n      children: component || _jsx(Text, {\n        style: [textStyles],\n        children: label\n      })\n    })\n  });\n}\nControls.propTypes = {\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  label: PropTypes.string,\n  onPressControl: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","View","TouchableOpacity","Text","PropTypes","jsx","_jsx","Controls","props","styles","textStyles","label","component","onPressControl","disabled","onPress","style","hitSlop","top","bottom","left","right","children","opacity","propTypes","oneOfType","array","object","string","func","isRequired"],"sources":["C:/Users/Ayamo/Downloads/driver-master/node_modules/react-native-calendar-picker/CalendarPicker/Controls.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Controls(props) {\r\n  const {\r\n    styles,\r\n    textStyles,\r\n    label,\r\n    component,\r\n    onPressControl,\r\n    disabled,\r\n  } = props;\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => onPressControl()}\r\n      style={styles}\r\n      disabled={disabled}\r\n      hitSlop={{ top: 20, bottom: 20, left: 40, right: 40 }}\r\n    >\r\n      <View style={{opacity: disabled ? 0 : 1}}>\r\n        { component ||\r\n          <Text style={[textStyles]}>\r\n            { label }\r\n          </Text>\r\n        }\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nControls.propTypes = {\r\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  label: PropTypes.string,\r\n  onPressControl: PropTypes.func.isRequired,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAM1B,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEnC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EACtC,IACEC,MAAM,GAMJD,KAAK,CANPC,MAAM;IACNC,UAAU,GAKRF,KAAK,CALPE,UAAU;IACVC,KAAK,GAIHH,KAAK,CAJPG,KAAK;IACLC,SAAS,GAGPJ,KAAK,CAHPI,SAAS;IACTC,cAAc,GAEZL,KAAK,CAFPK,cAAc;IACdC,QAAQ,GACNN,KAAK,CADPM,QAAQ;EAGV,OACER,IAAA,CAACJ,gBAAgB;IACfa,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMF,cAAc,CAAC,CAAC;IAAA,CAAC;IAChCG,KAAK,EAAEP,MAAO;IACdK,QAAQ,EAAEA,QAAS;IACnBG,OAAO,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,EAEtDhB,IAAA,CAACL,IAAI;MAACe,KAAK,EAAE;QAACO,OAAO,EAAET,QAAQ,GAAG,CAAC,GAAG;MAAC,CAAE;MAAAQ,QAAA,EACrCV,SAAS,IACTN,IAAA,CAACH,IAAI;QAACa,KAAK,EAAE,CAACN,UAAU,CAAE;QAAAY,QAAA,EACtBX;MAAK,CACH;IAAC,CAEL;EAAC,CACS,CAAC;AAEvB;AAEAJ,QAAQ,CAACiB,SAAS,GAAG;EACnBf,MAAM,EAAEL,SAAS,CAACqB,SAAS,CAAC,CAACrB,SAAS,CAACsB,KAAK,EAAEtB,SAAS,CAACuB,MAAM,CAAC,CAAC;EAChEhB,KAAK,EAAEP,SAAS,CAACwB,MAAM;EACvBf,cAAc,EAAET,SAAS,CAACyB,IAAI,CAACC;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}