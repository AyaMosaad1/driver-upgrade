{"ast":null,"code":"import findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { isChromeDebugger } from \"./PlatformChecker\";\nexport function getTag(view) {\n  return findNodeHandle(view);\n}\nexport var measure = function () {\n  var _f = function _f(animatedRef) {\n    if (!_WORKLET && !isChromeDebugger()) {\n      throw new Error('(measure) method cannot be used on RN side!');\n    }\n    var viewTag = animatedRef();\n    var result = _measure(viewTag);\n    if (result.x === -1234567) {\n      throw new Error(\"The view with tag \" + viewTag + \" could not be measured\");\n    }\n    return result;\n  };\n  _f._closure = {\n    isChromeDebugger: isChromeDebugger\n  };\n  _f.asString = \"function measure(animatedRef){const{isChromeDebugger}=jsThis._closure;{if(!_WORKLET&&!isChromeDebugger()){throw new Error('(measure) method cannot be used on RN side!');}const viewTag=animatedRef();const result=_measure(viewTag);if(result.x===-1234567){throw new Error(\\\"The view with tag \\\"+viewTag+\\\" could not be measured\\\");}return result;}}\";\n  _f.__workletHash = 7743315869169;\n  _f.__location = \"C:\\\\Users\\\\Ayamo\\\\Downloads\\\\driver-master\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\NativeMethods.js (6:7)\";\n  global.__reanimatedWorkletInit(_f);\n  return _f;\n}();\nexport var scrollTo = function () {\n  var _f = function _f(animatedRef, x, y, animated) {\n    if (!_WORKLET && !isChromeDebugger()) {\n      return;\n    }\n    var viewTag = animatedRef();\n    _scrollTo(viewTag, x, y, animated);\n  };\n  _f._closure = {\n    isChromeDebugger: isChromeDebugger\n  };\n  _f.asString = \"function scrollTo(animatedRef,x,y,animated){const{isChromeDebugger}=jsThis._closure;{if(!_WORKLET&&!isChromeDebugger()){return;}const viewTag=animatedRef();_scrollTo(viewTag,x,y,animated);}}\";\n  _f.__workletHash = 13469410603586;\n  _f.__location = \"C:\\\\Users\\\\Ayamo\\\\Downloads\\\\driver-master\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\NativeMethods.js (18:7)\";\n  global.__reanimatedWorkletInit(_f);\n  return _f;\n}();\nexport var setGestureState = function () {\n  var _f = function _f(handlerTag, newState) {\n    if (!_WORKLET && !isChromeDebugger()) {\n      console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n    }\n    _setGestureState(handlerTag, newState);\n  };\n  _f._closure = {\n    isChromeDebugger: isChromeDebugger\n  };\n  _f.asString = \"function setGestureState(handlerTag,newState){const{isChromeDebugger}=jsThis._closure;{if(!_WORKLET&&!isChromeDebugger()){console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');}_setGestureState(handlerTag,newState);}}\";\n  _f.__workletHash = 13583934599272;\n  _f.__location = \"C:\\\\Users\\\\Ayamo\\\\Downloads\\\\driver-master\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\NativeMethods.js (26:7)\";\n  global.__reanimatedWorkletInit(_f);\n  return _f;\n}();","map":{"version":3,"names":["isChromeDebugger","getTag","view","findNodeHandle","measure","_f","animatedRef","_WORKLET","Error","viewTag","result","_measure","x","_closure","asString","__workletHash","__location","global","__reanimatedWorkletInit","scrollTo","y","animated","_scrollTo","setGestureState","handlerTag","newState","console","warn","_setGestureState"],"sources":["C:/Users/Ayamo/Downloads/driver-master/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport { isChromeDebugger } from './PlatformChecker';\nexport function getTag(view) {\n    return findNodeHandle(view);\n}\nexport function measure(animatedRef) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        throw new Error('(measure) method cannot be used on RN side!');\n    }\n    const viewTag = animatedRef();\n    const result = _measure(viewTag);\n    if (result.x === -1234567) {\n        throw new Error(`The view with tag ${viewTag} could not be measured`);\n    }\n    return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        return;\n    }\n    const viewTag = animatedRef();\n    _scrollTo(viewTag, x, y, animated);\n}\nexport function setGestureState(handlerTag, newState) {\n    'worklet';\n    if (!_WORKLET && !isChromeDebugger()) {\n        console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n    }\n    _setGestureState(handlerTag, newState);\n}\n"],"mappings":";AACA,SAASA,gBAAgB;AACzB,OAAO,SAASC,MAAMA,CAACC,IAAI,EAAE;EACzB,OAAOC,cAAc,CAACD,IAAI,CAAC;AAC/B;AACA,WAAgBE,OAAO;EAAA,IAAAC,EAAA,YAAAA,GAACC,WAAW,EAAE;IAEjC,IAAI,CAACC,QAAQ,IAAI,CAACP,gBAAgB,CAAC,CAAC,EAAE;MAClC,MAAM,IAAIQ,KAAK,CAAC,6CAA6C,CAAC;IAClE;IACA,IAAMC,OAAO,GAAGH,WAAW,CAAC,CAAC;IAC7B,IAAMI,MAAM,GAAGC,QAAQ,CAACF,OAAO,CAAC;IAChC,IAAIC,MAAM,CAACE,CAAC,KAAK,CAAC,OAAO,EAAE;MACvB,MAAM,IAAIJ,KAAK,wBAAsBC,OAAO,2BAAwB,CAAC;IACzE;IACA,OAAOC,MAAM;EACjB,CAAC;EAAAL,EAAA,CAAAQ,QAAA;IAAAb,gBAAA,EAdmBA;EAAgB;EAAAK,EAAA,CAAAS,QAAA;EAAAT,EAAA,CAAAU,aAAA;EAAAV,EAAA,CAAAW,UAAA;EAAAC,MAAA,CAAAC,uBAAA,CAAAb,EAAA;EAAA,OAAAA,EAAA;AAAA;AAepC,WAAgBc,QAAQ;EAAA,IAAAd,EAAA,YAAAA,GAACC,WAAW,EAAEM,CAAC,EAAEQ,CAAC,EAAEC,QAAQ,EAAE;IAElD,IAAI,CAACd,QAAQ,IAAI,CAACP,gBAAgB,CAAC,CAAC,EAAE;MAClC;IACJ;IACA,IAAMS,OAAO,GAAGH,WAAW,CAAC,CAAC;IAC7BgB,SAAS,CAACb,OAAO,EAAEG,CAAC,EAAEQ,CAAC,EAAEC,QAAQ,CAAC;EACtC,CAAC;EAAAhB,EAAA,CAAAQ,QAAA;IAAAb,gBAAA,EAtBmBA;EAAgB;EAAAK,EAAA,CAAAS,QAAA;EAAAT,EAAA,CAAAU,aAAA;EAAAV,EAAA,CAAAW,UAAA;EAAAC,MAAA,CAAAC,uBAAA,CAAAb,EAAA;EAAA,OAAAA,EAAA;AAAA;AAuBpC,WAAgBkB,eAAe;EAAA,IAAAlB,EAAA,YAAAA,GAACmB,UAAU,EAAEC,QAAQ,EAAE;IAElD,IAAI,CAAClB,QAAQ,IAAI,CAACP,gBAAgB,CAAC,CAAC,EAAE;MAClC0B,OAAO,CAACC,IAAI,CAAC,uEAAuE,CAAC;IACzF;IACAC,gBAAgB,CAACJ,UAAU,EAAEC,QAAQ,CAAC;EAC1C,CAAC;EAAApB,EAAA,CAAAQ,QAAA;IAAAb,gBAAA,EA7BmBA;EAAgB;EAAAK,EAAA,CAAAS,QAAA;EAAAT,EAAA,CAAAU,aAAA;EAAAV,EAAA,CAAAW,UAAA;EAAAC,MAAA,CAAAC,uBAAA,CAAAb,EAAA;EAAA,OAAAA,EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}