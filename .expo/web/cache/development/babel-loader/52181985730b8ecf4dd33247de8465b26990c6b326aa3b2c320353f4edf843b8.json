{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Day(props) {\n  var day = props.day,\n    month = props.month,\n    year = props.year,\n    styles = props.styles,\n    customDatesStyles = props.customDatesStyles,\n    onPressDay = props.onPressDay,\n    selectedStartDate = props.selectedStartDate,\n    selectedEndDate = props.selectedEndDate,\n    allowRangeSelection = props.allowRangeSelection,\n    allowBackwardRangeSelect = props.allowBackwardRangeSelect,\n    propSelectedDayStyle = props.selectedDayStyle,\n    selectedDisabledDatesTextStyle = props.selectedDisabledDatesTextStyle,\n    selectedRangeStartStyle = props.selectedRangeStartStyle,\n    selectedRangeStyle = props.selectedRangeStyle,\n    selectedRangeEndStyle = props.selectedRangeEndStyle,\n    textStyle = props.textStyle,\n    todayTextStyle = props.todayTextStyle,\n    propSelectedDayTextStyle = props.selectedDayTextStyle,\n    selectedRangeStartTextStyle = props.selectedRangeStartTextStyle,\n    selectedRangeEndTextStyle = props.selectedRangeEndTextStyle,\n    minDate = props.minDate,\n    maxDate = props.maxDate,\n    disabledDates = props.disabledDates,\n    disabledDatesTextStyle = props.disabledDatesTextStyle,\n    minRangeDuration = props.minRangeDuration,\n    maxRangeDuration = props.maxRangeDuration,\n    enableDateChange = props.enableDateChange;\n  var thisDay = moment({\n    year: year,\n    month: month,\n    day: day,\n    hour: 12\n  });\n  var today = moment();\n  var dateOutOfRange;\n  var computedSelectedDayStyle = styles.dayButton;\n  var selectedDayTextStyle = {};\n  var selectedDayStyle;\n  var overrideOutOfRangeTextStyle;\n  var dateIsBeforeMin = false;\n  var dateIsAfterMax = false;\n  var dateIsDisabled = false;\n  var dateRangeLessThanMin = false;\n  var dateRangeGreaterThanMax = false;\n  if (maxDate) {\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\n  }\n  if (minDate) {\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\n  }\n  if (disabledDates) {\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\n      dateIsDisabled = true;\n    } else if (disabledDates instanceof Function) {\n      dateIsDisabled = disabledDates(thisDay);\n    }\n  }\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\n    var daysDiff = thisDay.diff(selectedStartDate, 'days');\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\n    if (maxRangeDuration) {\n      if (Array.isArray(maxRangeDuration)) {\n        var maxRangeEntry = maxRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\n          dateRangeGreaterThanMax = true;\n        }\n      } else if (daysDiff > maxRangeDuration) {\n        dateRangeGreaterThanMax = true;\n      }\n    }\n    if (minRangeDuration) {\n      if (Array.isArray(minRangeDuration)) {\n        var minRangeEntry = minRangeDuration.find(function (mrd) {\n          return selectedStartDate.isSame(mrd.date, 'day');\n        });\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\n          dateRangeLessThanMin = true;\n        }\n      } else if (daysDiff < minRangeDuration) {\n        dateRangeLessThanMin = true;\n      }\n    }\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\n      dateRangeLessThanMin = true;\n    }\n  }\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\n  var isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\n  var isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\n  var isThisDateInSelectedRange = selectedStartDate && selectedEndDate && thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '[]');\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\n    var isToday = thisDay.isSame(today, 'day');\n    if (isToday) {\n      computedSelectedDayStyle = styles.selectedToday;\n      selectedDayTextStyle = [todayTextStyle || styles.selectedDayLabel, propSelectedDayTextStyle];\n    }\n    var custom = getCustomDateStyle({\n      customDatesStyles: customDatesStyles,\n      date: thisDay\n    });\n    if (isToday && custom.style) {\n      computedSelectedDayStyle = [styles.selectedToday, custom.style];\n    }\n    if (!allowRangeSelection && selectedStartDate && isThisDaySameAsSelectedStart) {\n      computedSelectedDayStyle = styles.selectedDay;\n      selectedDayTextStyle = [styles.selectedDayLabel, isToday && todayTextStyle, propSelectedDayTextStyle];\n      selectedDayStyle = propSelectedDayStyle || styles.selectedDayBackground;\n    }\n    if (allowRangeSelection) {\n      if (selectedStartDate && selectedEndDate) {\n        if (isThisDaySameAsSelectedStart) {\n          computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        }\n        if (isThisDaySameAsSelectedEnd) {\n          computedSelectedDayStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeEndTextStyle];\n        }\n        if (isThisDaySameAsSelectedEnd && isThisDaySameAsSelectedStart && selectedEndDate.isSame(selectedStartDate, 'day')) {\n          computedSelectedDayStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        }\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '()')) {\n          computedSelectedDayStyle = [styles.inRangeDay, selectedRangeStyle];\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle];\n        }\n      }\n      if (selectedStartDate && !selectedEndDate && isThisDaySameAsSelectedStart) {\n        computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n        selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\n        overrideOutOfRangeTextStyle = selectedRangeStartTextStyle;\n      }\n    }\n    if (dateOutOfRange) {\n      return _jsx(View, {\n        style: [styles.dayWrapper, custom.containerStyle],\n        children: _jsx(View, {\n          style: [custom.style, computedSelectedDayStyle, selectedDayStyle],\n          children: _jsx(Text, {\n            style: [styles.dayLabel, textStyle, styles.disabledText, disabledDatesTextStyle, styles.selectedDisabledText, selectedDisabledDatesTextStyle, overrideOutOfRangeTextStyle],\n            children: day\n          })\n        })\n      });\n    } else {\n      return _jsx(View, {\n        style: [styles.dayWrapper, custom.containerStyle],\n        children: _jsx(TouchableOpacity, {\n          disabled: !enableDateChange,\n          style: [custom.style, computedSelectedDayStyle, selectedDayStyle],\n          onPress: function onPress() {\n            return onPressDay({\n              year: year,\n              month: month,\n              day: day\n            });\n          },\n          children: _jsx(Text, {\n            style: [styles.dayLabel, textStyle, custom.textStyle, selectedDayTextStyle],\n            children: day\n          })\n        })\n      });\n    }\n  } else {\n    var _custom = getCustomDateStyle({\n      customDatesStyles: customDatesStyles,\n      date: thisDay\n    });\n    if (!_custom.allowDisabled) {\n      _custom.containerStyle = null;\n      _custom.style = null;\n      _custom.textStyle = null;\n    }\n    return _jsx(View, {\n      style: [styles.dayWrapper, _custom.containerStyle],\n      children: _jsx(View, {\n        style: [styles.dayButton, _custom.style],\n        children: _jsx(Text, {\n          style: [textStyle, styles.disabledText, disabledDatesTextStyle, _custom.textStyle],\n          children: day\n        })\n      })\n    });\n  }\n}\nfunction getCustomDateStyle(_ref) {\n  var customDatesStyles = _ref.customDatesStyles,\n    date = _ref.date;\n  if (Array.isArray(customDatesStyles)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(customDatesStyles), _step; !(_step = _iterator()).done;) {\n      var cds = _step.value;\n      if (date.isSame(moment(cds.date), 'day')) {\n        return _objectSpread({}, cds);\n      }\n    }\n  } else if (customDatesStyles instanceof Function) {\n    var _cds = customDatesStyles(date) || {};\n    return _objectSpread({}, _cds);\n  }\n  return {};\n}\nDay.defaultProps = {\n  customDatesStyles: []\n};\nDay.propTypes = {\n  styles: PropTypes.shape({}),\n  day: PropTypes.number,\n  onPressDay: PropTypes.func,\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number])\n};","map":{"version":3,"names":["React","View","Text","TouchableOpacity","PropTypes","moment","jsx","_jsx","Day","props","day","month","year","styles","customDatesStyles","onPressDay","selectedStartDate","selectedEndDate","allowRangeSelection","allowBackwardRangeSelect","propSelectedDayStyle","selectedDayStyle","selectedDisabledDatesTextStyle","selectedRangeStartStyle","selectedRangeStyle","selectedRangeEndStyle","textStyle","todayTextStyle","propSelectedDayTextStyle","selectedDayTextStyle","selectedRangeStartTextStyle","selectedRangeEndTextStyle","minDate","maxDate","disabledDates","disabledDatesTextStyle","minRangeDuration","maxRangeDuration","enableDateChange","thisDay","hour","today","dateOutOfRange","computedSelectedDayStyle","dayButton","overrideOutOfRangeTextStyle","dateIsBeforeMin","dateIsAfterMax","dateIsDisabled","dateRangeLessThanMin","dateRangeGreaterThanMax","isAfter","isBefore","Array","isArray","indexOf","valueOf","Function","daysDiff","diff","Math","abs","maxRangeEntry","find","mrd","isSame","date","maxDuration","minRangeEntry","minDuration","isThisDaySameAsSelectedStart","isThisDaySameAsSelectedEnd","isThisDateInSelectedRange","isBetween","isToday","selectedToday","selectedDayLabel","custom","getCustomDateStyle","style","selectedDay","selectedDayBackground","startDayWrapper","endDayWrapper","inRangeDay","dayWrapper","containerStyle","children","dayLabel","disabledText","selectedDisabledText","disabled","onPress","allowDisabled","_ref","_iterator","_createForOfIteratorHelperLoose","_step","done","cds","value","_objectSpread","defaultProps","propTypes","shape","number","func","oneOfType","array"],"sources":["C:/Users/Ayamo/Downloads/driver-master/node_modules/react-native-calendar-picker/CalendarPicker/Day.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nexport default function Day(props) {\r\n  const {\r\n    day,\r\n    month,\r\n    year,\r\n    styles,\r\n    customDatesStyles,\r\n    onPressDay,\r\n    selectedStartDate,\r\n    selectedEndDate,\r\n    allowRangeSelection,\r\n    allowBackwardRangeSelect,\r\n    selectedDayStyle: propSelectedDayStyle,\r\n    selectedDisabledDatesTextStyle,\r\n    selectedRangeStartStyle,\r\n    selectedRangeStyle,\r\n    selectedRangeEndStyle,\r\n    textStyle,\r\n    todayTextStyle,\r\n    selectedDayTextStyle: propSelectedDayTextStyle,\r\n    selectedRangeStartTextStyle,\r\n    selectedRangeEndTextStyle,\r\n    minDate,\r\n    maxDate,\r\n    disabledDates,\r\n    disabledDatesTextStyle,\r\n    minRangeDuration,\r\n    maxRangeDuration,\r\n    enableDateChange\r\n  } = props;\r\n\r\n  const thisDay = moment({year, month, day, hour: 12 });\r\n  const today = moment();\r\n\r\n  let dateOutOfRange;\r\n  let computedSelectedDayStyle = styles.dayButton; // may be overridden depending on state\r\n  let selectedDayTextStyle = {};\r\n  let selectedDayStyle;\r\n  let overrideOutOfRangeTextStyle;\r\n  let dateIsBeforeMin = false;\r\n  let dateIsAfterMax = false;\r\n  let dateIsDisabled = false;\r\n  let dateRangeLessThanMin = false;\r\n  let dateRangeGreaterThanMax = false;\r\n\r\n  // First let's check if date is out of range\r\n  // Check whether props maxDate / minDate are defined. If not supplied,\r\n  // don't restrict dates.\r\n  if (maxDate) {\r\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\r\n  }\r\n  if (minDate) {\r\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\r\n  }\r\n\r\n  if (disabledDates) {\r\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\r\n      dateIsDisabled = true;\r\n    }\r\n    else if (disabledDates instanceof Function) {\r\n      dateIsDisabled = disabledDates(thisDay);\r\n    }\r\n  }\r\n\r\n  if (allowRangeSelection && selectedStartDate && !selectedEndDate) {\r\n    let daysDiff = thisDay.diff(selectedStartDate, 'days'); // may be + or -\r\n    daysDiff = allowBackwardRangeSelect ? Math.abs(daysDiff) : daysDiff;\r\n\r\n    if (maxRangeDuration) {\r\n      if (Array.isArray(maxRangeDuration)) {\r\n        let maxRangeEntry = maxRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (maxRangeEntry && daysDiff > maxRangeEntry.maxDuration) {\r\n          dateRangeGreaterThanMax = true;\r\n        }\r\n      } else if(daysDiff > maxRangeDuration) {\r\n        dateRangeGreaterThanMax = true;\r\n      }\r\n    }\r\n\r\n    if (minRangeDuration) {\r\n      if (Array.isArray(minRangeDuration)) {\r\n        let minRangeEntry = minRangeDuration.find(mrd => selectedStartDate.isSame(mrd.date, 'day') );\r\n        if (minRangeEntry && daysDiff < minRangeEntry.minDuration) {\r\n          dateRangeLessThanMin = true;\r\n        }\r\n      } else if(daysDiff < minRangeDuration) {\r\n        dateRangeLessThanMin = true;\r\n      }\r\n    }\r\n\r\n    if (!allowBackwardRangeSelect && daysDiff < 0) {\r\n      dateRangeLessThanMin = true;\r\n    }\r\n  }\r\n\r\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateRangeLessThanMin || dateRangeGreaterThanMax;\r\n\r\n  let isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\r\n  let isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\r\n  let isThisDateInSelectedRange =\r\n    selectedStartDate\r\n    && selectedEndDate\r\n    && thisDay.isBetween(selectedStartDate, selectedEndDate,'day','[]');\r\n\r\n  // If date is in range let's apply styles\r\n  if (!dateOutOfRange || isThisDaySameAsSelectedStart || isThisDaySameAsSelectedEnd || isThisDateInSelectedRange) {\r\n    // set today's style\r\n    let isToday = thisDay.isSame(today, 'day');\r\n    if (isToday) {\r\n      computedSelectedDayStyle = styles.selectedToday;\r\n      // todayTextStyle prop overrides selectedDayTextColor (created via makeStyles)\r\n      selectedDayTextStyle = [todayTextStyle || styles.selectedDayLabel, propSelectedDayTextStyle];\r\n    }\r\n\r\n    const custom = getCustomDateStyle({customDatesStyles, date: thisDay});\r\n\r\n    if (isToday && custom.style) {\r\n      // Custom date style overrides 'today' style. It may be reset below\r\n      // by date selection styling.\r\n      computedSelectedDayStyle = [styles.selectedToday, custom.style];\r\n    }\r\n\r\n    // set selected day style\r\n    if (!allowRangeSelection &&\r\n        selectedStartDate &&\r\n        isThisDaySameAsSelectedStart)\r\n    {\r\n      computedSelectedDayStyle = styles.selectedDay;\r\n      selectedDayTextStyle = [styles.selectedDayLabel, isToday && todayTextStyle, propSelectedDayTextStyle];\r\n      // selectedDayStyle prop overrides selectedDayColor (created via makeStyles)\r\n      selectedDayStyle = propSelectedDayStyle || styles.selectedDayBackground;\r\n    }\r\n\r\n    // Set selected ranges styles\r\n    if (allowRangeSelection) {\r\n      if (selectedStartDate && selectedEndDate) {\r\n        // Apply style for start date\r\n        if (isThisDaySameAsSelectedStart) {\r\n          computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        }\r\n        // Apply style for end date\r\n        if (isThisDaySameAsSelectedEnd) {\r\n          computedSelectedDayStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeEndTextStyle];\r\n        }\r\n        // Apply style if start date is the same as end date\r\n        if (isThisDaySameAsSelectedEnd &&\r\n            isThisDaySameAsSelectedStart &&\r\n            selectedEndDate.isSame(selectedStartDate, 'day'))\r\n        {\r\n          computedSelectedDayStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        }\r\n        // Apply style for days inside of range, excluding start & end dates.\r\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day', '()')) {\r\n          computedSelectedDayStyle = [styles.inRangeDay, selectedRangeStyle];\r\n          selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle];\r\n        }\r\n      }\r\n      // Apply style if start date has been selected but end date has not\r\n      if (selectedStartDate &&\r\n          !selectedEndDate &&\r\n          isThisDaySameAsSelectedStart)\r\n      {\r\n        computedSelectedDayStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n        selectedDayTextStyle = [styles.selectedDayLabel, propSelectedDayTextStyle, selectedRangeStartTextStyle];\r\n        // Override out of range start day text style when minRangeDuration = 1.\r\n        // This allows selected start date's text to be styled by selectedRangeStartTextStyle\r\n        // even when it's below minRangeDuration.\r\n        overrideOutOfRangeTextStyle = selectedRangeStartTextStyle;\r\n      }\r\n    }\r\n\r\n    if (dateOutOfRange) { // start or end date selected, and this date outside of range.\r\n      return (\r\n        <View style={[styles.dayWrapper, custom.containerStyle]}>\r\n          <View style={[custom.style, computedSelectedDayStyle, selectedDayStyle ]}>\r\n            <Text style={[styles.dayLabel, textStyle,\r\n              styles.disabledText, disabledDatesTextStyle,\r\n              styles.selectedDisabledText, selectedDisabledDatesTextStyle,\r\n              overrideOutOfRangeTextStyle\r\n            ]}>\r\n              { day }\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={[styles.dayWrapper, custom.containerStyle]}>\r\n          <TouchableOpacity\r\n            disabled={!enableDateChange}\r\n            style={[custom.style, computedSelectedDayStyle, selectedDayStyle ]}\r\n            onPress={() => onPressDay({year, month, day}) }>\r\n            <Text style={[styles.dayLabel, textStyle, custom.textStyle, selectedDayTextStyle]}>\r\n              { day }\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  else {  // dateOutOfRange = true, and no selected start or end date.\r\n    const custom = getCustomDateStyle({customDatesStyles, date: thisDay});\r\n    // Allow customDatesStyles to override disabled dates if allowDisabled set\r\n    if (!custom.allowDisabled) {\r\n      custom.containerStyle = null;\r\n      custom.style = null;\r\n      custom.textStyle = null;\r\n    }\r\n    return (\r\n      <View style={[styles.dayWrapper, custom.containerStyle]}>\r\n        <View style={[styles.dayButton, custom.style]}>\r\n          <Text style={[textStyle, styles.disabledText, disabledDatesTextStyle, custom.textStyle]}>\r\n            { day }\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getCustomDateStyle({customDatesStyles, date}) {\r\n  if (Array.isArray(customDatesStyles)) {\r\n    for (let cds of customDatesStyles) {\r\n      if (date.isSame(moment(cds.date), 'day')) {\r\n        return {...cds};\r\n      }\r\n    }\r\n  }\r\n  else if (customDatesStyles instanceof Function) {\r\n    let cds = customDatesStyles(date) || {};\r\n    return {...cds};\r\n  }\r\n  return {};\r\n}\r\n\r\nDay.defaultProps = {\r\n  customDatesStyles: [],\r\n};\r\n\r\nDay.propTypes = {\r\n  styles: PropTypes.shape({}),\r\n  day: PropTypes.number,\r\n  onPressDay: PropTypes.func,\r\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\r\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}