{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport styles from \"../../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Setting(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setusername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setpassword = _useState4[1];\n  var presshandler = function presshandler() {\n    Keyboard.dismiss();\n  };\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.Main_container,\n    children: _jsx(ScrollView, {\n      children: _jsx(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return presshandler();\n        },\n        children: _jsx(View, {\n          style: styles.Main_container,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Settings\"\n          })\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["useState","useEffect","NavigationContainer","createNativeStackNavigator","StyleSheet","Platform","ScrollView","Text","TextInput","View","TouchableWithoutFeedback","Keyboard","Button","TouchableOpacity","Alert","Image","ImageBackground","KeyboardAvoidingView","styles","jsx","_jsx","Setting","_ref","navigation","_useState","_useState2","_slicedToArray","username","setusername","_useState3","_useState4","password","setpassword","presshandler","dismiss","behavior","OS","style","Main_container","children","onPress","text"],"sources":["C:/Users/Ayamo/Downloads/driver-master/Screens/settings/settings.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport {\n  StyleSheet,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  View,\n  TouchableWithoutFeedback,\n  Keyboard,\n  Button,\n  TouchableOpacity,\n  Alert,\n  Image,\n  ImageBackground,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport styles from \"../../styles\";\n\nexport default function Setting({ navigation }) {\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const presshandler = () => {\n    Keyboard.dismiss();\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.Main_container}\n    >\n      <ScrollView>\n        <TouchableWithoutFeedback onPress={() => presshandler()}>\n          <View style={styles.Main_container}>\n            <Text style={styles.text}>Settings</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,oBAAA;AAiB5E,OAAOC,MAAM;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAElC,eAAe,SAASC,OAAOA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC1C,IAAAC,SAAA,GAAgCxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgC7B,QAAQ,CAAC,EAAE,CAAC;IAAA8B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBtB,QAAQ,CAACuB,OAAO,CAAC,CAAC;EACpB,CAAC;EAED,OACEd,IAAA,CAACH,oBAAoB;IACnBkB,QAAQ,EAAE9B,QAAQ,CAAC+B,EAAE,KAAK,KAAK,GAAG,SAAS,GAAG,QAAS;IACvDC,KAAK,EAAEnB,MAAM,CAACoB,cAAe;IAAAC,QAAA,EAE7BnB,IAAA,CAACd,UAAU;MAAAiC,QAAA,EACTnB,IAAA,CAACV,wBAAwB;QAAC8B,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMP,YAAY,CAAC,CAAC;QAAA,CAAC;QAAAM,QAAA,EACtDnB,IAAA,CAACX,IAAI;UAAC4B,KAAK,EAAEnB,MAAM,CAACoB,cAAe;UAAAC,QAAA,EACjCnB,IAAA,CAACb,IAAI;YAAC8B,KAAK,EAAEnB,MAAM,CAACuB,IAAK;YAAAF,QAAA;UAAA,CAAe;QAAC,CACrC;MAAC,CACiB;IAAC,CACjB;EAAC,CACO,CAAC;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}