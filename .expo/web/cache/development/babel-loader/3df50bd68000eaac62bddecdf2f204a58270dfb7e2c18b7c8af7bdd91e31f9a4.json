{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactLocalization = require(\"react-localization\");\nvar _reactLocalization2 = _interopRequireDefault(_reactLocalization);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar localization = _reactNative.NativeModules.ReactLocalization;\nif (!localization) {\n  console.error(\"Something went wrong initializing the native ReactNativeLocalization module.\\nPlease check your configuration.\\nDid you run 'react-native link'?\");\n}\nfunction getInterfaceLanguage() {\n  return localization.language.replace(/_/g, \"-\");\n}\nvar LocalizedStrings = function (_LocalizedStringsCore) {\n  _inherits(LocalizedStrings, _LocalizedStringsCore);\n  function LocalizedStrings(props) {\n    _classCallCheck(this, LocalizedStrings);\n    return _possibleConstructorReturn(this, (LocalizedStrings.__proto__ || Object.getPrototypeOf(LocalizedStrings)).call(this, props, {\n      customLanguageInterface: getInterfaceLanguage\n    }));\n  }\n  return LocalizedStrings;\n}(_reactLocalization2.default);\nexports.default = LocalizedStrings;","map":{"version":3,"names":["Object","defineProperty","exports","value","_reactNative","require","_reactLocalization","_reactLocalization2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","localization","NativeModules","ReactLocalization","console","error","getInterfaceLanguage","language","replace","LocalizedStrings","_LocalizedStringsCore","props","getPrototypeOf","customLanguageInterface"],"sources":["C:/Users/Ayamo/Downloads/driver-master/node_modules/react-native-localization/lib/LocalizedStrings.js"],"sourcesContent":["/**\n * Class to localize the ReactNative interface\n *\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n *\n * It uses a native library (ReactLocalization) to get the current interface language,\n * then display the correct language strings or the default language (the first\n * one if a match is not found).\n *\n * How to use:\n * Check the instructions at:\n * https://github.com/stefalda/ReactNativeLocalization\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactLocalization = require(\"react-localization\");\n\nvar _reactLocalization2 = _interopRequireDefault(_reactLocalization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Import the native module\n */\nvar localization = _reactNative.NativeModules.ReactLocalization;\n/**\n * Check if the native module has been correctly initialized\n */\nif (!localization) {\n  console.error(\"Something went wrong initializing the native ReactNativeLocalization module.\\nPlease check your configuration.\\nDid you run 'react-native link'?\");\n}\n\n/**\n * Custom Interface Language method returned by native code\n */\nfunction getInterfaceLanguage() {\n  return localization.language.replace(/_/g, \"-\");\n}\n\n/**\n * Extend the react-localization class overriding the getInterfaceLanguage method\n * to use the native module\n */\n\nvar LocalizedStrings = function (_LocalizedStringsCore) {\n  _inherits(LocalizedStrings, _LocalizedStringsCore);\n\n  function LocalizedStrings(props) {\n    _classCallCheck(this, LocalizedStrings);\n\n    return _possibleConstructorReturn(this, (LocalizedStrings.__proto__ || Object.getPrototypeOf(LocalizedStrings)).call(this, props, { customLanguageInterface: getInterfaceLanguage }));\n  }\n\n  return LocalizedStrings;\n}(_reactLocalization2.default);\n\nexports.default = LocalizedStrings;"],"mappings":"AAaA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AAAC,IAAAC,YAAA,GAAAC,OAAA;AAIH,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAEtD,IAAIE,mBAAmB,GAAGC,sBAAsB,CAACF,kBAAkB,CAAC;AAEpE,SAASE,sBAAsBA,CAACC,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAE9F,SAASG,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,0BAA0BA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAAE,IAAI,CAACD,IAAI,EAAE;IAAE,MAAM,IAAIE,cAAc,CAAC,2DAA2D,CAAC;EAAE;EAAE,OAAOD,IAAI,KAAK,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,CAAC,GAAGA,IAAI,GAAGD,IAAI;AAAE;AAE/O,SAASG,SAASA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAE,IAAI,OAAOA,UAAU,KAAK,UAAU,IAAIA,UAAU,KAAK,IAAI,EAAE;IAAE,MAAM,IAAIP,SAAS,CAAC,0DAA0D,GAAG,OAAOO,UAAU,CAAC;EAAE;EAAED,QAAQ,CAACE,SAAS,GAAGvB,MAAM,CAACwB,MAAM,CAACF,UAAU,IAAIA,UAAU,CAACC,SAAS,EAAE;IAAEE,WAAW,EAAE;MAAEtB,KAAK,EAAEkB,QAAQ;MAAEK,UAAU,EAAE,KAAK;MAAEC,QAAQ,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAK;EAAE,CAAC,CAAC;EAAE,IAAIN,UAAU,EAAEtB,MAAM,CAAC6B,cAAc,GAAG7B,MAAM,CAAC6B,cAAc,CAACR,QAAQ,EAAEC,UAAU,CAAC,GAAGD,QAAQ,CAACS,SAAS,GAAGR,UAAU;AAAE;AAK7e,IAAIS,YAAY,GAAG3B,YAAY,CAAC4B,aAAa,CAACC,iBAAiB;AAI/D,IAAI,CAACF,YAAY,EAAE;EACjBG,OAAO,CAACC,KAAK,CAAC,kJAAkJ,CAAC;AACnK;AAKA,SAASC,oBAAoBA,CAAA,EAAG;EAC9B,OAAOL,YAAY,CAACM,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AACjD;AAOA,IAAIC,gBAAgB,GAAG,UAAUC,qBAAqB,EAAE;EACtDpB,SAAS,CAACmB,gBAAgB,EAAEC,qBAAqB,CAAC;EAElD,SAASD,gBAAgBA,CAACE,KAAK,EAAE;IAC/B7B,eAAe,CAAC,IAAI,EAAE2B,gBAAgB,CAAC;IAEvC,OAAOvB,0BAA0B,CAAC,IAAI,EAAE,CAACuB,gBAAgB,CAACT,SAAS,IAAI9B,MAAM,CAAC0C,cAAc,CAACH,gBAAgB,CAAC,EAAErB,IAAI,CAAC,IAAI,EAAEuB,KAAK,EAAE;MAAEE,uBAAuB,EAAEP;IAAqB,CAAC,CAAC,CAAC;EACvL;EAEA,OAAOG,gBAAgB;AACzB,CAAC,CAAChC,mBAAmB,CAACI,OAAO,CAAC;AAE9BT,OAAO,CAACS,OAAO,GAAG4B,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}