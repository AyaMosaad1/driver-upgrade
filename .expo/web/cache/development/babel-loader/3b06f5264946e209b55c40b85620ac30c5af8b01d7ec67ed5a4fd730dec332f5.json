{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\nimport Route1 from \"./Route1\";\nimport Route2 from \"./Route2\";\nimport Route3 from \"./Route3\";\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport GlobalStyles from \"../../../Utils/GlobalStyles\";\nimport GlobalFonts from \"../../../Utils/GlobalFonts\";\nimport Pickup_History_styles from \"./Pickup_History_styles\";\nimport CalanderPicker from \"../../../Components/Calander/CalanderPicker\";\nimport Header_Global from \"../../../Components/Header_Global\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport NoInternet from \"../../../Components/nointernet\";\nimport { useDispatch } from \"react-redux\";\nimport { FilterDateApply } from \"../../../Redux/Reducers/DriverInfo\";\nimport moment from \"moment\";\nimport strings from \"../../../constants/lng/LocalizedStrings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Pickup_History() {\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    calandermodal = _useState2[0],\n    setcalandermodal = _useState2[1];\n  var dispatch = useDispatch();\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    showRoute1 = _React$useState2[0],\n    setshowRoute1 = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    showRoute2 = _React$useState4[0],\n    setshowRoute2 = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    showRoute3 = _React$useState6[0],\n    setshowRoute3 = _React$useState6[1];\n  var _useState3 = useState(\"#FFE713\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    bgcolor = _useState4[0],\n    setcolor = _useState4[1];\n  var _useState5 = useState(\"#E4E9F3\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    bgcolor2 = _useState6[0],\n    setcolor2 = _useState6[1];\n  var _useState7 = useState(strings.SelectDate),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedStartDate = _useState8[0],\n    setSelectedStartDate = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedEndDate = _useState10[0],\n    setSelectedEndDate = _useState10[1];\n  var _useState11 = useState(\"#E4E9F3\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    bgcolor3 = _useState12[0],\n    setcolor3 = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    nointernet = _useState14[0],\n    setnointernet = _useState14[1];\n  React.useEffect(function () {}, []);\n  var getDateTime = function getDateTime() {\n    var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    var Months = [\"Jan\", \"Feb\", \"March\", \"Apirl\", \"May\", \"Jun\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var day = days[new Date().getDay()];\n    var date = new Date().getDate();\n    var month = Months[new Date().getMonth()];\n    var year = new Date().getFullYear();\n    var hours = new Date().getHours();\n    var min = new Date().getMinutes();\n    setSelectedStartDate(day + \" \" + date + \" \" + month);\n    var maxDate = moment(selectedStartDate).format(\"YYYY-MM-DD\");\n    console.log(\"firsttimedate\", maxDate);\n    dispatch(FilterDateApply(maxDate));\n  };\n  var Route1_Handler = function Route1_Handler() {\n    if (showRoute1 && bgcolor != \"#FFE713\") {\n      setshowRoute1(false);\n      setcolor(\"#E4E9F3\");\n    } else {\n      setshowRoute1(true);\n      setshowRoute2(false);\n      setshowRoute3(false);\n      setcolor(\"#FFE713\");\n      setcolor2(\"#E4E9F3\");\n      setcolor3(\"#E4E9F3\");\n    }\n  };\n  var Route2_Handler = function Route2_Handler() {\n    if (showRoute2 && bgcolor2 != \"#FFE713\") {\n      setshowRoute2(false);\n      setcolor2(\"#E4E9F3\");\n    } else {\n      setshowRoute2(true);\n      setshowRoute1(false);\n      setshowRoute3(false);\n      setcolor2(\"#FFE713\");\n      setcolor(\"#E4E9F3\");\n      setcolor3(\"#E4E9F3\");\n    }\n  };\n  var Route3_Handler = function Route3_Handler() {\n    if (showRoute3 && bgcolor3 != \"#FFE713\") {\n      setshowRoute3(false);\n      setcolor3(\"#E4E9F3\");\n    } else {\n      setshowRoute3(true);\n      setshowRoute2(false);\n      setshowRoute1(false);\n      setcolor3(\"#FFE713\");\n      setcolor(\"#E4E9F3\");\n      setcolor2(\"#E4E9F3\");\n    }\n  };\n  var onDateChange = function onDateChange(date, type) {\n    if (type === \"END_DATE\") {\n      setSelectedEndDate(date);\n      setcalandermodal(false);\n    } else {\n      setSelectedEndDate(null);\n      setSelectedStartDate(date);\n      var maxDate = moment(date).format(\"YYYY-MM-DD\");\n      setcalandermodal(false);\n      console.log(\"formatted date\", maxDate);\n      dispatch(FilterDateApply(maxDate));\n    }\n  };\n  var startDate = selectedStartDate ? selectedStartDate.toString() : \"\";\n  return _jsxs(View, {\n    style: [Pickup_History_styles.container, GlobalStyles.FlexDirectionColumn],\n    children: [_jsx(Header_Global, {\n      Title: strings.PICKUPHISTORY,\n      BackIcon: true,\n      Onpress: function Onpress() {\n        navigation.navigate(\"BottomTabNavigation\", {\n          screen: \"Home\"\n        });\n      }\n    }), _jsxs(View, {\n      style: GlobalStyles.cardview,\n      children: [_jsxs(View, {\n        style: [GlobalStyles.cardview, {\n          backgroundColor: \"white\",\n          marginTop: 10\n        }],\n        children: [_jsxs(View, {\n          style: Pickup_History_styles.scrollview_style,\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              width: \"98%\"\n            },\n            children: [_jsx(Text, {\n              style: Pickup_History_styles.filterStyle,\n              children: strings.FILTER\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                dispatch(FilterDateApply(\"\"));\n                var resetAction = CommonActions.reset({\n                  index: 0,\n                  routes: [{\n                    name: \"Pickup_History\"\n                  }]\n                });\n                navigation.dispatch(resetAction);\n              },\n              children: _jsx(Text, {\n                style: Pickup_History_styles.filterStyle,\n                children: strings.CLEARFILTER\n              })\n            })]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setcalandermodal(true);\n            },\n            children: _jsxs(View, {\n              style: Pickup_History_styles.Calnder_View,\n              children: [_jsx(Image, {\n                style: Pickup_History_styles.Dropdown_Arrow,\n                source: require(\"../../../assets/dropdownm.png\")\n              }), _jsxs(View, {\n                style: Pickup_History_styles.calnderImg,\n                children: [_jsx(Image, {\n                  style: {\n                    marginRight: \"4%\",\n                    width: 17.91,\n                    height: 18.43\n                  },\n                  source: require(\"../../../assets/calendarIcon.png\")\n                }), _jsx(Text, {\n                  style: Pickup_History_styles.calander_date_txt,\n                  children: startDate.substring(0, 16)\n                })]\n              })]\n            })\n          }), _jsxs(View, {\n            style: Pickup_History_styles.innerViewStyle,\n            children: [_jsx(TouchableOpacity, {\n              style: Pickup_History_styles.buttonView1(bgcolor),\n              onPress: Route1_Handler,\n              children: _jsx(Text, {\n                style: Pickup_History_styles.innerText,\n                children: strings.ROUTE1\n              })\n            }), _jsx(TouchableOpacity, {\n              style: Pickup_History_styles.buttonView2(bgcolor2),\n              onPress: Route2_Handler,\n              children: _jsx(Text, {\n                style: Pickup_History_styles.innerText,\n                children: strings.ROUTE2\n              })\n            }), _jsx(TouchableOpacity, {\n              style: Pickup_History_styles.buttonView3(bgcolor3),\n              onPress: Route3_Handler,\n              children: _jsx(Text, {\n                style: Pickup_History_styles.innerText,\n                children: strings.ROUTE3\n              })\n            })]\n          }), _jsx(View, {\n            style: Pickup_History_styles.filterView\n          })]\n        }), showRoute1 ? _jsx(Route1, {}) : null, showRoute2 ? _jsx(Route2, {}) : null, showRoute3 ? _jsx(Route3, {}) : null]\n      }), _jsx(Modal, {\n        transparent: true,\n        animationType: \"slide\",\n        hardwareAccelerated: true,\n        visible: calandermodal,\n        onRequestClose: function onRequestClose() {\n          setcalandermodal(false);\n        },\n        children: _jsx(TouchableWithoutFeedback, {\n          style: {\n            flex: 1\n          },\n          onPress: function onPress() {\n            setcalandermodal(false);\n          },\n          children: _jsx(KeyboardAvoidingView, {\n            behavior: Platform.OS === \"ios\" && \"padding\",\n            style: [GlobalStyles.fullwidth, GlobalStyles.flex1],\n            children: _jsx(View, {\n              style: Pickup_History_styles.calanderpicker_view,\n              children: _jsx(CalendarPicker, {\n                startFromMonday: true,\n                allowRangeSelection: false,\n                minDate: new Date(2018, 1, 1),\n                width: 337,\n                height: 281,\n                maxDate: new Date(2050, 6, 3),\n                weekdays: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n                monthTitleStyle: {\n                  fontSize: 11,\n                  fontFamily: \"Poppins_600SemiBold\",\n                  color: \"#7D828D\"\n                },\n                yearTitleStyle: {\n                  fontSize: 11,\n                  fontFamily: \"Poppins_600SemiBold\",\n                  color: \"#7D828D\"\n                },\n                dayLabelsWrapper: {\n                  borderColor: \"white\"\n                },\n                months: [\"January\", \"Febraury\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n                previousTitle: \"<\",\n                nextTitle: \">\",\n                todayBackgroundColor: \"#51AB1D\",\n                selectedDayColor: \"#51AB1D\",\n                selectedDayTextColor: \"white\",\n                scaleFactor: 375,\n                nextTitleStyle: {\n                  fontSize: 18\n                },\n                previousTitleStyle: {\n                  fontSize: 18\n                },\n                textStyle: {\n                  color: \"#707070\",\n                  fontSize: 11,\n                  fontFamily: \"Poppins_500Medium\"\n                },\n                onDateChange: onDateChange\n              })\n            })\n          })\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","CommonActions","useNavigation","Route1","Route2","Route3","CalendarPicker","GlobalStyles","GlobalFonts","Pickup_History_styles","CalanderPicker","Header_Global","KeyboardAvoidingView","Platform","NetInfo","NoInternet","useDispatch","FilterDateApply","moment","strings","jsx","_jsx","jsxs","_jsxs","Pickup_History","navigation","_useState","_useState2","_slicedToArray","calandermodal","setcalandermodal","dispatch","_React$useState","_React$useState2","showRoute1","setshowRoute1","_React$useState3","_React$useState4","showRoute2","setshowRoute2","_React$useState5","_React$useState6","showRoute3","setshowRoute3","_useState3","_useState4","bgcolor","setcolor","_useState5","_useState6","bgcolor2","setcolor2","_useState7","SelectDate","_useState8","selectedStartDate","setSelectedStartDate","_useState9","_useState10","selectedEndDate","setSelectedEndDate","_useState11","_useState12","bgcolor3","setcolor3","_useState13","_useState14","nointernet","setnointernet","useEffect","getDateTime","days","Months","day","Date","getDay","date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","maxDate","format","console","log","Route1_Handler","Route2_Handler","Route3_Handler","onDateChange","type","startDate","toString","View","style","container","FlexDirectionColumn","children","Title","PICKUPHISTORY","BackIcon","Onpress","navigate","screen","cardview","backgroundColor","marginTop","scrollview_style","flexDirection","justifyContent","width","Text","filterStyle","FILTER","TouchableOpacity","onPress","resetAction","reset","index","routes","name","CLEARFILTER","Calnder_View","Image","Dropdown_Arrow","source","require","calnderImg","marginRight","height","calander_date_txt","substring","innerViewStyle","buttonView1","innerText","ROUTE1","buttonView2","ROUTE2","buttonView3","ROUTE3","filterView","Modal","transparent","animationType","hardwareAccelerated","visible","onRequestClose","TouchableWithoutFeedback","flex","behavior","OS","fullwidth","flex1","calanderpicker_view","startFromMonday","allowRangeSelection","minDate","weekdays","monthTitleStyle","fontSize","fontFamily","color","yearTitleStyle","dayLabelsWrapper","borderColor","months","previousTitle","nextTitle","todayBackgroundColor","selectedDayColor","selectedDayTextColor","scaleFactor","nextTitleStyle","previousTitleStyle","textStyle"],"sources":["C:/Users/Ayamo/Downloads/driver-master/Screens/Home/Pickup_History/Pickup_History.js"],"sourcesContent":["import {\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Modal,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { CommonActions, useNavigation } from \"@react-navigation/native\";\nimport Route1 from \"./Route1\";\nimport Route2 from \"./Route2\";\nimport Route3 from \"./Route3\";\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport GlobalStyles from \"../../../Utils/GlobalStyles\";\nimport GlobalFonts from \"../../../Utils/GlobalFonts\";\nimport Pickup_History_styles from \"./Pickup_History_styles\";\nimport CalanderPicker from \"../../../Components/Calander/CalanderPicker\";\nimport Header_Global from \"../../../Components/Header_Global\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { Platform } from \"react-native\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport NoInternet from \"../../../Components/nointernet\";\nimport { useDispatch } from \"react-redux\";\nimport { FilterDateApply } from \"../../../Redux/Reducers/DriverInfo\";\nimport moment from \"moment\";\nimport strings from \"../../../constants/lng/LocalizedStrings\";\n\nexport default function Pickup_History() {\n  const navigation = useNavigation();\n  const [calandermodal, setcalandermodal] = useState(false);\n  var dispatch = useDispatch();\n\n  const [showRoute1, setshowRoute1] = React.useState(true);\n  const [showRoute2, setshowRoute2] = React.useState(false);\n  const [showRoute3, setshowRoute3] = React.useState(false);\n  const [bgcolor, setcolor] = useState(\"#FFE713\");\n  const [bgcolor2, setcolor2] = useState(\"#E4E9F3\");\n  const [selectedStartDate, setSelectedStartDate] = useState(\n    strings.SelectDate\n  );\n  const [selectedEndDate, setSelectedEndDate] = useState(null);\n  const [bgcolor3, setcolor3] = useState(\"#E4E9F3\");\n\n  const [nointernet, setnointernet] = useState(false);\n\n  // useEffect(() => {\n  //   const unsubscribe = NetInfo.addEventListener((state) => {\n  //     console.log(\"Connection type\", state.type);\n  //     console.log(\"Is connected?\", state.isConnected);\n\n  //     if (state.isConnected === false) {\n  //       setnointernet(true);\n  //     } else if (state.isConnected === true) {\n  //       setnointernet(false);\n  //     }\n  //   });\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // });\n  React.useEffect(() => {\n    // getDateTime();\n  }, []);\n  const getDateTime = () => {\n    var days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    var Months = [\n      \"Jan\",\n      \"Feb\",\n      \"March\",\n      \"Apirl\",\n      \"May\",\n      \"Jun\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var day = days[new Date().getDay()];\n    var date = new Date().getDate(); //Current Date\n    var month = Months[new Date().getMonth()]; //Current Month\n\n    var year = new Date().getFullYear(); //Current Year\n    var hours = new Date().getHours(); //Current Hours\n    var min = new Date().getMinutes(); //Current Minutes\n    setSelectedStartDate(day + \" \" + date + \" \" + month);\n    // :00:00.000Z time format\n    const maxDate = moment(selectedStartDate).format(\"YYYY-MM-DD\");\n    console.log(\"firsttimedate\", maxDate);\n    dispatch(FilterDateApply(maxDate));\n  };\n  const Route1_Handler = () => {\n    if (showRoute1 && bgcolor != \"#FFE713\") {\n      setshowRoute1(false);\n      setcolor(\"#E4E9F3\");\n    } else {\n      setshowRoute1(true);\n      setshowRoute2(false);\n      setshowRoute3(false);\n      setcolor(\"#FFE713\");\n      setcolor2(\"#E4E9F3\");\n      setcolor3(\"#E4E9F3\");\n    }\n  };\n\n  const Route2_Handler = () => {\n    if (showRoute2 && bgcolor2 != \"#FFE713\") {\n      setshowRoute2(false);\n      setcolor2(\"#E4E9F3\");\n    } else {\n      setshowRoute2(true);\n      setshowRoute1(false);\n      setshowRoute3(false);\n      setcolor2(\"#FFE713\");\n      setcolor(\"#E4E9F3\");\n      setcolor3(\"#E4E9F3\");\n    }\n  };\n  const Route3_Handler = () => {\n    if (showRoute3 && bgcolor3 != \"#FFE713\") {\n      setshowRoute3(false);\n      setcolor3(\"#E4E9F3\");\n    } else {\n      setshowRoute3(true);\n      setshowRoute2(false);\n      setshowRoute1(false);\n      setcolor3(\"#FFE713\");\n      setcolor(\"#E4E9F3\");\n      setcolor2(\"#E4E9F3\");\n    }\n  };\n  const onDateChange = (date, type) => {\n    // console.log(date.substring(0, 10));\n    // setFilterDate(date.substring(0, 10));\n    //function to handle the date change\n    if (type === \"END_DATE\") {\n      setSelectedEndDate(date);\n      setcalandermodal(false);\n    } else {\n      setSelectedEndDate(null);\n\n      setSelectedStartDate(date);\n\n      const maxDate = moment(date).format(\"YYYY-MM-DD\");\n\n      setcalandermodal(false);\n      console.log(\"formatted date\", maxDate);\n      dispatch(FilterDateApply(maxDate));\n\n      // ApplyFilter(maxDate);\n    }\n  };\n  const startDate = selectedStartDate ? selectedStartDate.toString() : \"\";\n  return (\n    <View\n      style={[\n        Pickup_History_styles.container,\n        GlobalStyles.FlexDirectionColumn,\n      ]}\n    >\n      <Header_Global\n        Title={strings.PICKUPHISTORY}\n        BackIcon={true}\n        Onpress={() => {\n          navigation.navigate(\"BottomTabNavigation\", { screen: \"Home\" });\n        }}\n      />\n      <View style={GlobalStyles.cardview}>\n        <View\n          style={[\n            GlobalStyles.cardview,\n            { backgroundColor: \"white\", marginTop: 10 },\n          ]}\n        >\n          <View style={Pickup_History_styles.scrollview_style}>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: \"98%\",\n              }}\n            >\n              <Text style={Pickup_History_styles.filterStyle}>\n                {strings.FILTER}\n              </Text>\n              <TouchableOpacity\n                onPress={() => {\n                  // console.log(\"clicked\");\n                  dispatch(FilterDateApply(\"\"));\n                  const resetAction = CommonActions.reset({\n                    index: 0,\n                    routes: [{ name: \"Pickup_History\" }],\n                  });\n                  navigation.dispatch(resetAction);\n                }}\n              >\n                <Text style={Pickup_History_styles.filterStyle}>\n                  {strings.CLEARFILTER}\n                </Text>\n              </TouchableOpacity>\n            </View>\n\n            <TouchableOpacity\n              onPress={() => {\n                setcalandermodal(true);\n              }}\n            >\n              <View style={Pickup_History_styles.Calnder_View}>\n                <Image\n                  style={Pickup_History_styles.Dropdown_Arrow}\n                  source={require(\"../../../assets/dropdownm.png\")}\n                />\n                <View style={Pickup_History_styles.calnderImg}>\n                  <Image\n                    style={{ marginRight: \"4%\", width: 17.91, height: 18.43 }}\n                    source={require(\"../../../assets/calendarIcon.png\")}\n                  />\n                  <Text style={Pickup_History_styles.calander_date_txt}>\n                    {startDate.substring(0, 16)}\n                  </Text>\n                </View>\n              </View>\n            </TouchableOpacity>\n            <View style={Pickup_History_styles.innerViewStyle}>\n              <TouchableOpacity\n                style={Pickup_History_styles.buttonView1(bgcolor)}\n                onPress={Route1_Handler}\n              >\n                <Text style={Pickup_History_styles.innerText}>\n                  {strings.ROUTE1}\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={Pickup_History_styles.buttonView2(bgcolor2)}\n                onPress={Route2_Handler}\n              >\n                <Text style={Pickup_History_styles.innerText}>\n                  {strings.ROUTE2}\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={Pickup_History_styles.buttonView3(bgcolor3)}\n                onPress={Route3_Handler}\n              >\n                <Text style={Pickup_History_styles.innerText}>\n                  {strings.ROUTE3}\n                </Text>\n              </TouchableOpacity>\n            </View>\n            <View style={Pickup_History_styles.filterView}></View>\n          </View>\n          {showRoute1 ? <Route1></Route1> : null}\n          {showRoute2 ? <Route2></Route2> : null}\n          {showRoute3 ? <Route3></Route3> : null}\n        </View>\n\n        <Modal\n          transparent\n          animationType=\"slide\"\n          hardwareAccelerated\n          visible={calandermodal}\n          onRequestClose={() => {\n            setcalandermodal(false);\n          }}\n        >\n          <TouchableWithoutFeedback\n            style={{\n              flex: 1,\n            }}\n            onPress={() => {\n              setcalandermodal(false);\n            }}\n          >\n            <KeyboardAvoidingView\n              behavior={Platform.OS === \"ios\" && \"padding\"}\n              style={[GlobalStyles.fullwidth, GlobalStyles.flex1]}\n            >\n              <View style={Pickup_History_styles.calanderpicker_view}>\n                <CalendarPicker\n                  startFromMonday={true}\n                  allowRangeSelection={false}\n                  minDate={new Date(2018, 1, 1)}\n                  width={337}\n                  height={281}\n                  maxDate={new Date(2050, 6, 3)}\n                  weekdays={[\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"]}\n                  monthTitleStyle={{\n                    fontSize: 11,\n                    fontFamily: \"Poppins_600SemiBold\",\n                    color: \"#7D828D\",\n                  }}\n                  yearTitleStyle={{\n                    fontSize: 11,\n                    fontFamily: \"Poppins_600SemiBold\",\n                    color: \"#7D828D\",\n                  }}\n                  dayLabelsWrapper={{\n                    borderColor: \"white\",\n                  }}\n                  months={[\n                    \"January\",\n                    \"Febraury\",\n                    \"March\",\n                    \"April\",\n                    \"May\",\n                    \"June\",\n                    \"July\",\n                    \"August\",\n                    \"September\",\n                    \"October\",\n                    \"November\",\n                    \"December\",\n                  ]}\n                  previousTitle=\"<\"\n                  nextTitle=\">\"\n                  todayBackgroundColor=\"#51AB1D\"\n                  selectedDayColor=\"#51AB1D\"\n                  selectedDayTextColor=\"white\"\n                  scaleFactor={375}\n                  nextTitleStyle={{\n                    fontSize: 18,\n                  }}\n                  previousTitleStyle={{\n                    fontSize: 18,\n                  }}\n                  textStyle={{\n                    color: \"#707070\",\n                    fontSize: 11,\n                    fontFamily: \"Poppins_500Medium\",\n                  }}\n                  onDateChange={onDateChange}\n                />\n              </View>\n            </KeyboardAvoidingView>\n          </TouchableWithoutFeedback>\n        </Modal>\n        {/* <NoInternet internet={nointernet} /> */}\n      </View>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}