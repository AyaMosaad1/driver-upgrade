{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Toast from \"react-native-root-toast\";\nimport OwnStorage from \"../../Api/StorageController\";\nimport ApiController from \"../../Api/ApiController\";\nimport Header from \"../../Components/Header_Shorex\";\nimport { useDispatch } from \"react-redux\";\nimport GlobalStyles from \"../../Utils/GlobalStyles\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Forgot_Password_Styles from \"./Forgot_Password_Styles\";\nimport strings from \"../../constants/lng/LocalizedStrings\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ForgotPassword(_ref) {\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showloaderM = _useState4[0],\n    setshowloaderM = _useState4[1];\n  var localdata = new OwnStorage();\n  var api = new ApiController();\n  var navigation = useNavigation();\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    pass = _useState6[0],\n    setpassword = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isUsernameValid = _useState8[0],\n    setIsUsernameValid = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isPhoneNoValid = _useState10[0],\n    setIsPhoneNoValid = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    codeSent = _useState12[0],\n    setcodeSent = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    confirmpass = _useState14[0],\n    setconfirmpassword = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showLoaderM = _useState16[0],\n    setShowLoaderM = _useState16[1];\n  var _useState17 = useState(\"PhoneNo\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showType = _useState18[0],\n    setShowType = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    email = _useState20[0],\n    setEmail = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    phone = _useState22[0],\n    setPhone = _useState22[1];\n  var _useState23 = useState(true),\n    _useState24 = _slicedToArray(_useState23, 2),\n    showpassword = _useState24[0],\n    setShowPassword = _useState24[1];\n  var _useState25 = useState(true),\n    _useState26 = _slicedToArray(_useState25, 2),\n    showpasswordCon = _useState26[0],\n    setShowPasswordCon = _useState26[1];\n  var _useState27 = useState(React.createRef()),\n    _useState28 = _slicedToArray(_useState27, 2),\n    ref1 = _useState28[0],\n    setref1 = _useState28[1];\n  var _useState29 = useState(React.createRef()),\n    _useState30 = _slicedToArray(_useState29, 2),\n    ref2 = _useState30[0],\n    setref2 = _useState30[1];\n  var _useState31 = useState(React.createRef()),\n    _useState32 = _slicedToArray(_useState31, 2),\n    ref3 = _useState32[0],\n    setref3 = _useState32[1];\n  var _useState33 = useState(React.createRef()),\n    _useState34 = _slicedToArray(_useState33, 2),\n    ref4 = _useState34[0],\n    setref4 = _useState34[1];\n  var _useState35 = useState(\"\"),\n    _useState36 = _slicedToArray(_useState35, 2),\n    pin1 = _useState36[0],\n    setpin1 = _useState36[1];\n  var _useState37 = useState(\"\"),\n    _useState38 = _slicedToArray(_useState37, 2),\n    pin2 = _useState38[0],\n    setpin2 = _useState38[1];\n  var _useState39 = useState(\"\"),\n    _useState40 = _slicedToArray(_useState39, 2),\n    pin3 = _useState40[0],\n    setpin3 = _useState40[1];\n  var _useState41 = useState(\"\"),\n    _useState42 = _slicedToArray(_useState41, 2),\n    pin4 = _useState42[0],\n    setpin4 = _useState42[1];\n  var _useState43 = useState(\"\"),\n    _useState44 = _slicedToArray(_useState43, 2),\n    otp = _useState44[0],\n    setOtp = _useState44[1];\n  var resetData = new FormData();\n  var validate = function validate() {\n    if (pass !== \"\" && confirmpass !== \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var submitt = function submitt() {\n    if (pass.length < 11 && confirmpass.length < 11) {\n      Toast.show(strings.PASSWORDCONTAIN11);\n    } else {\n      if (validate()) {\n        savepassword();\n      } else {\n        if (pass != confirmpass) {\n          Toast.show(\"password mismatch\");\n          return false;\n        } else {\n          Toast.show(\"Please Fill out all fields\");\n        }\n      }\n    }\n  };\n  var savepassword = function savepassword() {\n    setshowloaderM(true);\n    if (pass != confirmpass) {\n      Toast.show(\"Password Mismatch Please Check\");\n      setshowloaderM(false);\n    } else {\n      resetData.append(\"otp\", otp);\n      resetData.append(\"phone\", phone);\n      resetData.append(\"password\", pass);\n      resetData.append(\"password_confirmation\", confirmpass);\n      console.log(\"formData\", resetData);\n      var res = api.ResetPassword(resetData).then(function (res) {\n        console.log(\"changesssssssssssss\", res.data.message);\n        Toast.show(res.data.message);\n        setshowloaderM(false);\n        if (res.data.code == 200) {\n          setshowloaderM(false);\n          navigation.navigate(\"Login\");\n          Toast.show(res.data.message);\n        } else {\n          setshowloaderM(false);\n        }\n      }).catch(function (error) {\n        setshowloaderM(false);\n        Toast.show(error.response.data.message);\n        console.log(\"error in Reset password:\", error.response.data.message);\n        Toast.show(error.response.data.message);\n      });\n    }\n  };\n  var sendCode = function sendCode() {\n    setShowLoaderM(true);\n    if (email == \"\") {\n      setIsUsernameValid(false);\n    }\n    api.ForgetPassword(email).then(function (res) {\n      if (res.data.code == \"200\") {\n        setcodeSent(true);\n        setShowLoaderM(false);\n        console.log(\"response is\", res.data.message);\n        Toast.show(res.data.message);\n      } else {\n        setShowLoaderM(false);\n        console.log(\"response is\", res.data.message);\n        Toast.show(res.data.message);\n      }\n    }).catch(function (error) {\n      console.log(error, error);\n      Toast.show(error.message);\n      setShowLoaderM(false);\n    });\n  };\n  var sendCodePhone = function sendCodePhone() {\n    setShowLoaderM(true);\n    if (phone == \"\") {\n      setIsPhoneNoValid(false);\n    }\n    api.ForgetPasswordPhone(phone).then(function (res) {\n      if (res.data.code == \"200\") {\n        setcodeSent(true);\n        setShowLoaderM(false);\n        console.log(\"response is\", res.data.message);\n        Toast.show(res.data.message);\n      } else {\n        setShowLoaderM(false);\n        console.log(\"response is\", res.data.message);\n        Toast.show(res.data.message);\n      }\n    }).catch(function (error) {\n      console.log(error, error);\n      Toast.show(error.response.data.message);\n      setShowLoaderM(false);\n    });\n  };\n  var reSendCode = function reSendCode() {\n    if (phone == \"\") {\n      setIsPhoneNoValid(false);\n    }\n    api.ForgetPasswordPhone(phone).then(function (res) {\n      if (res.data.code == \"200\") {\n        setcodeSent(true);\n        console.log(\"response is\", res.data.message);\n        Toast.show(res.data.message);\n      } else {\n        console.log(\"response is\", res.data.message);\n        Toast.show(res.data.message);\n      }\n    }).catch(function (error) {\n      console.log(error, error);\n      Toast.show(error.message);\n    });\n  };\n  var submitOTP = function submitOTP() {\n    setShowLoaderM(true);\n    if (pin1 == \"\" || pin2 == \"\" || pin3 == \"\" || pin4 == \"\") {\n      Toast.show(\"Please Enter Complete Pin\");\n      setShowLoaderM(false);\n    } else {\n      api.VerifyOTP(otp).then(function (res) {\n        if (res.data.status == \"success\") {\n          setModalVisible(false);\n          setShowLoaderM(false);\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        } else {\n          setShowLoaderM(false);\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        }\n      }).catch(function (error) {\n        console.log(otp);\n        console.log(error);\n        Toast.show(error.message);\n        setShowLoaderM(false);\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: Forgot_Password_Styles.Main_container,\n    children: [_jsx(Header, {}), _jsxs(View, {\n      style: Forgot_Password_Styles.child_view,\n      children: [_jsx(View, {\n        style: Forgot_Password_Styles.text_style_name_change,\n        children: _jsx(Text, {\n          style: Forgot_Password_Styles.text_style_name_change,\n          children: strings.ENTERNEWPASSWORD\n        })\n      }), _jsx(Text, {\n        style: {\n          fontSize: 9,\n          fontFamily: \"Poppins_400Regular\",\n          color: \"#105398\"\n        },\n        children: strings.ENTERNEWPASSWORDTORESET\n      }), _jsx(View, {\n        style: Forgot_Password_Styles.text_style_name,\n        children: _jsx(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: \"Poppins_600SemiBold\"\n          },\n          children: strings.NEWPASSWORD\n        })\n      }), _jsx(View, {\n        style: Forgot_Password_Styles.text_input,\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          },\n          children: [_jsx(TextInput, {\n            secureTextEntry: showpassword,\n            placeholder: \"********\",\n            onChangeText: function onChangeText(Text) {\n              setpassword(Text);\n            }\n          }), _jsx(Pressable, {\n            style: {\n              right: 15\n            },\n            onPress: function onPress() {\n              return setShowPassword(!showpassword);\n            },\n            hitSlop: 20,\n            children: showpassword == true ? _jsx(Image, {\n              source: require(\"../../assets/closeeye.png\"),\n              style: {\n                width: 20,\n                height: 20\n              }\n            }) : _jsx(Image, {\n              source: require(\"../../assets/openeye.png\"),\n              style: {\n                width: 20,\n                height: 20\n              }\n            })\n          })]\n        })\n      }), _jsx(View, {\n        style: Forgot_Password_Styles.text_style_name,\n        children: _jsx(Text, {\n          style: {\n            fontSize: 12,\n            fontFamily: \"Poppins_600SemiBold\"\n          },\n          children: strings.CONFIRMNEWPASSWORD\n        })\n      }), _jsx(View, {\n        style: Forgot_Password_Styles.text_input,\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          },\n          children: [_jsx(TextInput, {\n            secureTextEntry: showpasswordCon,\n            placeholder: \"********\",\n            onChangeText: function onChangeText(Text) {\n              setconfirmpassword(Text);\n            }\n          }), _jsx(Pressable, {\n            style: {\n              right: 15\n            },\n            onPress: function onPress() {\n              return setShowPasswordCon(!showpasswordCon);\n            },\n            hitSlop: 20,\n            children: showpasswordCon == true ? _jsx(Image, {\n              source: require(\"../../assets/closeeye.png\"),\n              style: {\n                width: 20,\n                height: 20\n              }\n            }) : _jsx(Image, {\n              source: require(\"../../assets/openeye.png\"),\n              style: {\n                width: 20,\n                height: 20\n              }\n            })\n          })]\n        })\n      }), _jsx(Modal, {\n        visible: modalVisible,\n        transparent: true,\n        animationType: \"slide\",\n        hardwareAccelerated: true,\n        children: _jsx(TouchableWithoutFeedback, {\n          style: {\n            flex: 1\n          },\n          onPress: function onPress() {\n            setModalVisible(false);\n            navigation.navigate(\"Login\");\n          },\n          children: _jsx(View, {\n            style: Forgot_Password_Styles.centeredview,\n            children: _jsx(ScrollView, {\n              style: {\n                height: \"100%\",\n                width: \"100%\"\n              },\n              children: codeSent ? _jsxs(View, {\n                style: Forgot_Password_Styles.modalView,\n                children: [_jsx(Text, {\n                  style: {\n                    fontSize: 17,\n                    fontFamily: \"Poppins_500Medium\",\n                    paddingTop: 24\n                  },\n                  children: strings.EnterOTPCODE\n                }), _jsx(Text, {\n                  style: [{\n                    color: \"#6E6E6E\",\n                    fontFamily: \"Poppins_400Regular\",\n                    fontSize: 12,\n                    textAlign: \"center\",\n                    padding: \"5%\"\n                  }],\n                  children: strings.OTPMODALDESC\n                }), _jsxs(View, {\n                  style: {\n                    justifyContent: \"space-evenly\",\n                    flexDirection: \"row\"\n                  },\n                  children: [_jsx(View, {\n                    style: Forgot_Password_Styles.text_inputOTP,\n                    children: _jsx(TextInput, {\n                      style: [{\n                        fontSize: 18\n                      }],\n                      textAlign: \"center\",\n                      ref: ref1,\n                      useRef: ref1,\n                      value: pin1,\n                      keyboardType: \"phone-pad\",\n                      maxLength: 1,\n                      onChangeText: function onChangeText(value) {\n                        setpin1(value);\n                        if (value) {\n                          ref2.current.focus();\n                        }\n                      }\n                    })\n                  }), _jsx(View, {\n                    style: Forgot_Password_Styles.text_inputOTP,\n                    children: _jsx(TextInput, {\n                      style: [{\n                        fontSize: 18\n                      }],\n                      textAlign: \"center\",\n                      ref: ref2,\n                      value: pin2,\n                      keyboardType: \"phone-pad\",\n                      maxLength: 1,\n                      onKeyPress: function onKeyPress(e) {\n                        if (e.nativeEvent.key === \"Backspace\") {\n                          if (pin2 == \"\") {\n                            ref1.current.focus();\n                          }\n                        }\n                      },\n                      onChangeText: function onChangeText(value) {\n                        setpin2(value);\n                        if (value) {\n                          ref3.current.focus();\n                        }\n                      }\n                    })\n                  }), _jsx(View, {\n                    style: Forgot_Password_Styles.text_inputOTP,\n                    children: _jsx(TextInput, {\n                      style: [{\n                        fontSize: 18\n                      }],\n                      textAlign: \"center\",\n                      ref: ref3,\n                      value: pin3,\n                      keyboardType: \"phone-pad\",\n                      maxLength: 1,\n                      onKeyPress: function onKeyPress(e) {\n                        if (e.nativeEvent.key === \"Backspace\") {\n                          if (pin3 == \"\") {\n                            ref2.current.focus();\n                          }\n                        }\n                      },\n                      onChangeText: function onChangeText(value) {\n                        setpin3(value);\n                        if (value) {\n                          ref4.current.focus();\n                        }\n                      }\n                    })\n                  }), _jsx(View, {\n                    style: Forgot_Password_Styles.text_inputOTP,\n                    children: _jsx(TextInput, {\n                      style: [{\n                        fontSize: 18\n                      }],\n                      textAlign: \"center\",\n                      ref: ref4,\n                      value: pin4,\n                      keyboardType: \"phone-pad\",\n                      maxLength: 1,\n                      onKeyPress: function onKeyPress(e) {\n                        if (e.nativeEvent.key === \"Backspace\") {\n                          if (pin4 == \"\") {\n                            ref3.current.focus();\n                          }\n                        }\n                      },\n                      onChangeText: function onChangeText(value) {\n                        setpin4(value);\n                      },\n                      onEndEditing: function onEndEditing() {\n                        setOtp(pin1 + pin2 + pin3 + pin4);\n                      }\n                    })\n                  })]\n                }), _jsx(TouchableOpacity, {\n                  style: Forgot_Password_Styles.Button,\n                  onPress: function onPress() {\n                    return submitOTP();\n                  },\n                  children: _jsxs(View, {\n                    style: {\n                      flexDirection: \"row\",\n                      marginRight: \"2%\"\n                    },\n                    children: [showLoaderM && _jsx(ActivityIndicator, {\n                      size: \"small\",\n                      color: \"white\",\n                      style: [GlobalStyles.activityIndicator]\n                    }), _jsx(Text, {\n                      style: {\n                        fontSize: 17,\n                        fontFamily: \"Poppins_500Medium\",\n                        color: \"white\"\n                      },\n                      children: strings.SUBMIT\n                    })]\n                  })\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return reSendCode();\n                  },\n                  children: _jsx(Text, {\n                    style: [Forgot_Password_Styles.resendotp],\n                    children: strings.RESENDOTP\n                  })\n                })]\n              }) : _jsxs(View, {\n                style: Forgot_Password_Styles.modalView,\n                children: [_jsx(Text, {\n                  style: {\n                    fontSize: 17,\n                    fontFamily: \"Poppins_500Medium\",\n                    paddingTop: 24\n                  },\n                  children: strings.CHANGEYOURPASSWORD\n                }), _jsx(Text, {\n                  style: [{\n                    color: \"#6E6E6E\",\n                    fontFamily: \"Poppins_400Regular\",\n                    fontSize: 12,\n                    textAlign: \"center\",\n                    padding: \"5%\"\n                  }],\n                  children: strings.OTPMODALDESC\n                }), _jsxs(View, {\n                  style: {\n                    width: \"90%\"\n                  },\n                  children: [_jsxs(View, {\n                    style: {\n                      alignItems: \"center\"\n                    },\n                    children: [_jsx(Pressable, {\n                      onPress: function onPress() {\n                        console.log(\"email\") + setShowType(\"Email\");\n                      }\n                    }), _jsx(Text, {\n                      style: {\n                        fontSize: 15,\n                        fontFamily: \"Poppins_500Medium\"\n                      },\n                      children: strings.MOBILENO\n                    })]\n                  }), _jsxs(View, {\n                    children: [_jsx(Text, {\n                      style: {\n                        fontSize: 12,\n                        fontFamily: \"Poppins_600SemiBold\"\n                      },\n                      children: strings.MOBILENO\n                    }), _jsxs(View, {\n                      style: Forgot_Password_Styles.text_input,\n                      children: [_jsx(TextInput, {\n                        label: strings.PHONENO,\n                        placeholder: \"+341234567890\",\n                        keyboardType: \"phone-pad\",\n                        onChangeText: function onChangeText(text) {\n                          if (text == \"\") {\n                            setIsPhoneNoValid(false);\n                          } else {\n                            setPhone(text);\n                            setIsPhoneNoValid(true);\n                          }\n                        }\n                      }), _jsx(View, {\n                        style: {\n                          justifyContent: \"flex-end\",\n                          top: 15\n                        },\n                        children: !isPhoneNoValid && _jsx(Text, {\n                          style: [GlobalStyles.inputErrorTxt, GlobalStyles.fullwidth],\n                          children: \"*this field is required\"\n                        })\n                      })]\n                    }), _jsx(View, {\n                      style: Forgot_Password_Styles.inputContainer,\n                      children: _jsx(TouchableOpacity, {\n                        style: GlobalStyles.Button,\n                        onPress: function onPress() {\n                          sendCodePhone();\n                          console.log(\"ok\");\n                        },\n                        children: _jsxs(View, {\n                          style: [GlobalStyles.FlexDirectionRow],\n                          children: [showLoaderM && _jsx(ActivityIndicator, {\n                            size: \"small\",\n                            color: \"white\",\n                            style: [GlobalStyles.activityIndicator]\n                          }), _jsx(Text, {\n                            style: GlobalStyles.ButtonTextMain,\n                            children: strings.SENDCODE\n                          })]\n                        })\n                      })\n                    })]\n                  })]\n                })]\n              })\n            })\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: Forgot_Password_Styles.Button,\n        onPress: function onPress() {\n          return submitt();\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [showloaderM && _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"white\",\n            style: [GlobalStyles.activityIndicator]\n          }), _jsx(Text, {\n            style: {\n              fontSize: 17,\n              fontFamily: \"Poppins_500Medium\",\n              color: \"white\"\n            },\n            children: strings.SUBMIT\n          })]\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","Text","TextInput","View","TouchableOpacity","ActivityIndicator","Modal","ScrollView","TouchableWithoutFeedback","useNavigation","Toast","OwnStorage","ApiController","Header","useDispatch","GlobalStyles","Pressable","Forgot_Password_Styles","strings","Image","jsx","_jsx","jsxs","_jsxs","ForgotPassword","_ref","route","dispatch","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","showloaderM","setshowloaderM","localdata","api","navigation","_useState5","_useState6","pass","setpassword","_useState7","_useState8","isUsernameValid","setIsUsernameValid","_useState9","_useState10","isPhoneNoValid","setIsPhoneNoValid","_useState11","_useState12","codeSent","setcodeSent","_useState13","_useState14","confirmpass","setconfirmpassword","_useState15","_useState16","showLoaderM","setShowLoaderM","_useState17","_useState18","showType","setShowType","_useState19","_useState20","email","setEmail","_useState21","_useState22","phone","setPhone","_useState23","_useState24","showpassword","setShowPassword","_useState25","_useState26","showpasswordCon","setShowPasswordCon","_useState27","createRef","_useState28","ref1","setref1","_useState29","_useState30","ref2","setref2","_useState31","_useState32","ref3","setref3","_useState33","_useState34","ref4","setref4","_useState35","_useState36","pin1","setpin1","_useState37","_useState38","pin2","setpin2","_useState39","_useState40","pin3","setpin3","_useState41","_useState42","pin4","setpin4","_useState43","_useState44","otp","setOtp","resetData","FormData","validate","submitt","length","show","PASSWORDCONTAIN11","savepassword","append","console","log","res","ResetPassword","then","data","message","code","navigate","catch","error","response","sendCode","ForgetPassword","sendCodePhone","ForgetPasswordPhone","reSendCode","submitOTP","VerifyOTP","status","style","Main_container","children","child_view","text_style_name_change","ENTERNEWPASSWORD","fontSize","fontFamily","color","ENTERNEWPASSWORDTORESET","text_style_name","NEWPASSWORD","text_input","flexDirection","justifyContent","secureTextEntry","placeholder","onChangeText","right","onPress","hitSlop","source","require","width","height","CONFIRMNEWPASSWORD","visible","transparent","animationType","hardwareAccelerated","flex","centeredview","modalView","paddingTop","EnterOTPCODE","textAlign","padding","OTPMODALDESC","text_inputOTP","ref","value","keyboardType","maxLength","current","focus","onKeyPress","e","nativeEvent","key","onEndEditing","Button","marginRight","size","activityIndicator","SUBMIT","resendotp","RESENDOTP","CHANGEYOURPASSWORD","alignItems","MOBILENO","label","PHONENO","text","top","inputErrorTxt","fullwidth","inputContainer","FlexDirectionRow","ButtonTextMain","SENDCODE"],"sources":["C:/Users/Ayamo/Downloads/driver-master/Screens/Forgot_Password/Forgot_Password.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  ActivityIndicator,\n  Modal,\n  ScrollView,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Toast from \"react-native-root-toast\";\nimport OwnStorage from \"../../Api/StorageController\";\nimport ApiController from \"../../Api/ApiController\";\nimport Header from \"../../Components/Header_Shorex\";\nimport { useDispatch } from \"react-redux\";\nimport GlobalStyles from \"../../Utils/GlobalStyles\";\nimport { Pressable } from \"react-native\";\nimport Forgot_Password_Styles from \"./Forgot_Password_Styles\";\nimport strings from \"../../constants/lng/LocalizedStrings\";\nimport { Image } from \"react-native\";\nexport default function ForgotPassword({ route }) {\n  const dispatch = useDispatch();\n  const [modalVisible, setModalVisible] = useState(true);\n  const [showloaderM, setshowloaderM] = useState(false);\n  var localdata = new OwnStorage();\n  var api = new ApiController();\n  const navigation = useNavigation();\n  const [pass, setpassword] = useState(\"\");\n  const [isUsernameValid, setIsUsernameValid] = useState(true);\n  const [isPhoneNoValid, setIsPhoneNoValid] = useState(true);\n  const [codeSent, setcodeSent] = useState(\"\");\n  const [confirmpass, setconfirmpassword] = useState(\"\");\n  const [showLoaderM, setShowLoaderM] = useState(false);\n  const [showType, setShowType] = useState(\"PhoneNo\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [showpassword, setShowPassword] = useState(true);\n  const [showpasswordCon, setShowPasswordCon] = useState(true);\n  const [ref1, setref1] = useState(React.createRef());\n  const [ref2, setref2] = useState(React.createRef());\n  const [ref3, setref3] = useState(React.createRef());\n  const [ref4, setref4] = useState(React.createRef());\n  const [pin1, setpin1] = useState(\"\");\n  const [pin2, setpin2] = useState(\"\");\n  const [pin3, setpin3] = useState(\"\");\n  const [pin4, setpin4] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  let resetData = new FormData();\n\n  const validate = () => {\n    if (pass !== \"\" && confirmpass !== \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const submitt = () => {\n    if (pass.length < 11 && confirmpass.length < 11) {\n      Toast.show(strings.PASSWORDCONTAIN11);\n    } else {\n      if (validate()) {\n        savepassword();\n      } else {\n        if (pass != confirmpass) {\n          Toast.show(\"password mismatch\");\n          return false;\n        } else {\n          Toast.show(\"Please Fill out all fields\");\n        }\n      }\n    }\n  };\n  const savepassword = () => {\n    setshowloaderM(true);\n    if (pass != confirmpass) {\n      Toast.show(\"Password Mismatch Please Check\");\n      setshowloaderM(false);\n    } else {\n      resetData.append(\"otp\", otp);\n      resetData.append(\"phone\", phone);\n      resetData.append(\"password\", pass);\n      resetData.append(\"password_confirmation\", confirmpass);\n      console.log(\"formData\", resetData);\n      let res = api\n        .ResetPassword(resetData)\n        .then((res) => {\n          console.log(\"changesssssssssssss\", res.data.message);\n          Toast.show(res.data.message);\n          setshowloaderM(false);\n          if (res.data.code == 200) {\n            setshowloaderM(false);\n            navigation.navigate(\"Login\");\n            Toast.show(res.data.message);\n          } else {\n            setshowloaderM(false);\n            // setPasswordErrors({ password: res.data.Error });\n            // setPasswordIsValid(false);\n          }\n        })\n        .catch((error) => {\n          setshowloaderM(false);\n          Toast.show(error.response.data.message);\n          console.log(\"error in Reset password:\", error.response.data.message);\n          Toast.show(error.response.data.message);\n        });\n    }\n  };\n\n  const sendCode = () => {\n    setShowLoaderM(true);\n    if (email == \"\") {\n      setIsUsernameValid(false);\n    }\n    api\n      .ForgetPassword(email)\n      .then((res) => {\n        if (res.data.code == \"200\") {\n          setcodeSent(true);\n          setShowLoaderM(false);\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        } else {\n          setShowLoaderM(false);\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error, error);\n        Toast.show(error.message);\n        setShowLoaderM(false);\n      });\n  };\n  const sendCodePhone = () => {\n    setShowLoaderM(true);\n    if (phone == \"\") {\n      setIsPhoneNoValid(false);\n    }\n    api\n      .ForgetPasswordPhone(phone)\n      .then((res) => {\n        if (res.data.code == \"200\") {\n          setcodeSent(true);\n          setShowLoaderM(false);\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        } else {\n          setShowLoaderM(false);\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error, error);\n        Toast.show(error.response.data.message);\n        setShowLoaderM(false);\n      });\n  };\n  const reSendCode = () => {\n    if (phone == \"\") {\n      setIsPhoneNoValid(false);\n    }\n    api\n      .ForgetPasswordPhone(phone)\n      .then((res) => {\n        if (res.data.code == \"200\") {\n          setcodeSent(true);\n\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        } else {\n          console.log(\"response is\", res.data.message);\n          Toast.show(res.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error, error);\n        Toast.show(error.message);\n      });\n  };\n\n  const submitOTP = () => {\n    setShowLoaderM(true);\n    if (pin1 == \"\" || pin2 == \"\" || pin3 == \"\" || pin4 == \"\") {\n      Toast.show(\"Please Enter Complete Pin\");\n      setShowLoaderM(false);\n    } else {\n      api\n        .VerifyOTP(otp)\n        .then((res) => {\n          if (res.data.status == \"success\") {\n            setModalVisible(false);\n            //setcodeSent(true);\n            setShowLoaderM(false);\n            console.log(\"response is\", res.data.message);\n            Toast.show(res.data.message);\n          } else {\n            setShowLoaderM(false);\n            console.log(\"response is\", res.data.message);\n            Toast.show(res.data.message);\n          }\n        })\n        .catch((error) => {\n          console.log(otp);\n          console.log(error);\n          Toast.show(error.message);\n          setShowLoaderM(false);\n        });\n    }\n  };\n\n  return (\n    <View style={Forgot_Password_Styles.Main_container}>\n      <Header />\n      <View style={Forgot_Password_Styles.child_view}>\n        <View style={Forgot_Password_Styles.text_style_name_change}>\n          <Text style={Forgot_Password_Styles.text_style_name_change}>\n            {strings.ENTERNEWPASSWORD}\n          </Text>\n        </View>\n        <Text\n          style={{\n            fontSize: 9,\n            fontFamily: \"Poppins_400Regular\",\n            color: \"#105398\",\n          }}\n        >\n          {strings.ENTERNEWPASSWORDTORESET}\n        </Text>\n\n        <View style={Forgot_Password_Styles.text_style_name}>\n          <Text style={{ fontSize: 12, fontFamily: \"Poppins_600SemiBold\" }}>\n            {strings.NEWPASSWORD}\n          </Text>\n        </View>\n        <View style={Forgot_Password_Styles.text_input}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TextInput\n              secureTextEntry={showpassword}\n              placeholder=\"********\"\n              onChangeText={(Text) => {\n                setpassword(Text);\n              }}\n            ></TextInput>\n            <Pressable\n              style={{ right: 15 }}\n              onPress={() => setShowPassword(!showpassword)}\n              hitSlop={20}\n            >\n              {showpassword == true ? (\n                <Image\n                  source={require(\"../../assets/closeeye.png\")}\n                  style={{ width: 20, height: 20 }}\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/openeye.png\")}\n                  style={{ width: 20, height: 20 }}\n                />\n              )}\n            </Pressable>\n          </View>\n        </View>\n\n        <View style={Forgot_Password_Styles.text_style_name}>\n          <Text style={{ fontSize: 12, fontFamily: \"Poppins_600SemiBold\" }}>\n            {strings.CONFIRMNEWPASSWORD}\n          </Text>\n        </View>\n        <View style={Forgot_Password_Styles.text_input}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TextInput\n              secureTextEntry={showpasswordCon}\n              placeholder=\"********\"\n              onChangeText={(Text) => {\n                setconfirmpassword(Text);\n              }}\n            ></TextInput>\n            <Pressable\n              style={{ right: 15 }}\n              onPress={() => setShowPasswordCon(!showpasswordCon)}\n              hitSlop={20}\n            >\n              {showpasswordCon == true ? (\n                <Image\n                  source={require(\"../../assets/closeeye.png\")}\n                  style={{ width: 20, height: 20 }}\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/openeye.png\")}\n                  style={{ width: 20, height: 20 }}\n                />\n              )}\n            </Pressable>\n          </View>\n        </View>\n        <Modal\n          visible={modalVisible}\n          transparent\n          animationType=\"slide\"\n          hardwareAccelerated\n        >\n          <TouchableWithoutFeedback\n            style={{\n              flex: 1,\n            }}\n            onPress={() => {\n              setModalVisible(false);\n              navigation.navigate(\"Login\");\n            }}\n          >\n            <View style={Forgot_Password_Styles.centeredview}>\n              <ScrollView style={{ height: \"100%\", width: \"100%\" }}>\n                {codeSent ? (\n                  <View style={Forgot_Password_Styles.modalView}>\n                    <Text\n                      style={{\n                        fontSize: 17,\n                        fontFamily: \"Poppins_500Medium\",\n                        paddingTop: 24,\n                      }}\n                    >\n                      {strings.EnterOTPCODE}\n                    </Text>\n\n                    <Text\n                      style={[\n                        {\n                          color: \"#6E6E6E\",\n                          fontFamily: \"Poppins_400Regular\",\n                          fontSize: 12,\n                          textAlign: \"center\",\n                          padding: \"5%\",\n                        },\n                      ]}\n                    >\n                      {strings.OTPMODALDESC}\n                    </Text>\n                    <View\n                      style={{\n                        justifyContent: \"space-evenly\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <View style={Forgot_Password_Styles.text_inputOTP}>\n                        <TextInput\n                          style={[{ fontSize: 18 }]}\n                          textAlign={\"center\"}\n                          ref={ref1}\n                          useRef={ref1}\n                          value={pin1}\n                          keyboardType=\"phone-pad\"\n                          maxLength={1}\n                          onChangeText={(value) => {\n                            // this.setState({ pin1: value });\n                            setpin1(value);\n                            if (value) {\n                              ref2.current.focus();\n                            }\n                          }}\n                        ></TextInput>\n                      </View>\n                      <View style={Forgot_Password_Styles.text_inputOTP}>\n                        <TextInput\n                          style={[{ fontSize: 18 }]}\n                          textAlign={\"center\"}\n                          ref={ref2}\n                          value={pin2}\n                          keyboardType=\"phone-pad\"\n                          maxLength={1}\n                          onKeyPress={(e) => {\n                            if (e.nativeEvent.key === \"Backspace\") {\n                              if (pin2 == \"\") {\n                                ref1.current.focus();\n                              }\n                            }\n                          }}\n                          onChangeText={(value) => {\n                            // this.setState({ pin2: value });\n                            setpin2(value);\n                            if (value) {\n                              ref3.current.focus();\n                            }\n                          }}\n                        ></TextInput>\n                      </View>\n                      <View style={Forgot_Password_Styles.text_inputOTP}>\n                        <TextInput\n                          style={[{ fontSize: 18 }]}\n                          textAlign={\"center\"}\n                          ref={ref3}\n                          value={pin3}\n                          keyboardType=\"phone-pad\"\n                          maxLength={1}\n                          onKeyPress={(e) => {\n                            if (e.nativeEvent.key === \"Backspace\") {\n                              if (pin3 == \"\") {\n                                ref2.current.focus();\n                              }\n                            }\n                          }}\n                          onChangeText={(value) => {\n                            //  this.setState({ pin3: value });\n                            setpin3(value);\n                            if (value) {\n                              ref4.current.focus();\n                            }\n                          }}\n                        ></TextInput>\n                      </View>\n\n                      <View style={Forgot_Password_Styles.text_inputOTP}>\n                        <TextInput\n                          style={[{ fontSize: 18 }]}\n                          textAlign={\"center\"}\n                          ref={ref4}\n                          value={pin4}\n                          keyboardType=\"phone-pad\"\n                          maxLength={1}\n                          onKeyPress={(e) => {\n                            if (e.nativeEvent.key === \"Backspace\") {\n                              if (pin4 == \"\") {\n                                ref3.current.focus();\n                              }\n                            }\n                          }}\n                          onChangeText={(value) => {\n                            //this.setState({ pin4: value });\n\n                            setpin4(value);\n                          }}\n                          onEndEditing={() => {\n                            setOtp(pin1 + pin2 + pin3 + pin4);\n                          }}\n                        ></TextInput>\n                      </View>\n                    </View>\n\n                    <TouchableOpacity\n                      style={Forgot_Password_Styles.Button}\n                      onPress={() => submitOTP()}\n                    >\n                      <View style={{ flexDirection: \"row\", marginRight: \"2%\" }}>\n                        {showLoaderM && (\n                          <ActivityIndicator\n                            size=\"small\"\n                            color=\"white\"\n                            style={[GlobalStyles.activityIndicator]}\n                          ></ActivityIndicator>\n                        )}\n                        <Text\n                          style={{\n                            fontSize: 17,\n                            fontFamily: \"Poppins_500Medium\",\n                            color: \"white\",\n                          }}\n                        >\n                          {strings.SUBMIT}\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={() => reSendCode()}>\n                      <Text style={[Forgot_Password_Styles.resendotp]}>\n                        {strings.RESENDOTP}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                ) : (\n                  <View style={Forgot_Password_Styles.modalView}>\n                    <Text\n                      style={{\n                        fontSize: 17,\n                        fontFamily: \"Poppins_500Medium\",\n                        paddingTop: 24,\n                      }}\n                    >\n                      {strings.CHANGEYOURPASSWORD}\n                    </Text>\n                    <Text\n                      style={[\n                        {\n                          color: \"#6E6E6E\",\n                          fontFamily: \"Poppins_400Regular\",\n                          fontSize: 12,\n                          textAlign: \"center\",\n                          padding: \"5%\",\n                        },\n                      ]}\n                    >\n                      {strings.OTPMODALDESC}\n                    </Text>\n                    <View style={{ width: \"90%\" }}>\n                      <View\n                        style={{\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Pressable\n                          onPress={() => {\n                            console.log(\"email\") + setShowType(\"Email\");\n                          }}\n                        >\n                          {/* {showType == \"Email\" ? (\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              fontFamily: \"Poppins_500Medium\",\n                            }}\n                          >\n                            {strings.EMAIL}\n                          </Text>\n                        ) : (\n                          <Text>{strings.EMAIL}</Text>\n                        )} */}\n                        </Pressable>\n\n                        {/* {showType == \"PhoneNo\" ? (\n                        <Text\n                          style={{\n                            fontSize: 15,\n                            fontFamily: \"Poppins_500Medium\",\n                          }}\n                        >\n                          {strings.PHONENO}\n                        </Text>\n                      ) : (\n                        <Text>{strings.PHONENO}</Text>\n                      )} */}\n                        <Text\n                          style={{\n                            fontSize: 15,\n                            fontFamily: \"Poppins_500Medium\",\n                          }}\n                        >\n                          {strings.MOBILENO}\n                        </Text>\n                      </View>\n                      {/* {showType == \"Email\" ? (\n                      <View>\n                        <Text\n                          style={{\n                            fontSize: 12,\n                            fontFamily: \"Poppins_600SemiBold\",\n                          }}\n                        >\n                          {strings.EMAIL}\n                        </Text>\n                        <View style={Forgot_Password_Styles.text_input}>\n                          <TextInput\n                            label={strings.EMAIL}\n                            style={Forgot_Password_Styles.input}\n                            placeholder={strings.ENTERYOUREMAIL}\n                            onChangeText={(text) => {\n                              if (text == \"\") {\n                                setIsUsernameValid(false);\n                              } else {\n                                setEmail(text);\n                                setIsUsernameValid(true);\n                              }\n                            }}\n                          />\n                          <View\n                            style={{\n                              justifyContent: \"flex-end\",\n                              top: 15,\n                            }}\n                          >\n                            {!isUsernameValid && (\n                              <Text\n                                style={[\n                                  GlobalStyles.inputErrorTxt,\n                                  GlobalStyles.fullwidth,\n                                ]}\n                              >\n                                *this field is required\n                              </Text>\n                            )}\n                          </View>\n                        </View>\n                        <View style={Forgot_Password_Styles.inputContainer}>\n                          <TouchableOpacity\n                            style={GlobalStyles.Button}\n                            onPress={() => {\n                              sendCode();\n                            }}\n                          >\n                            <View style={[GlobalStyles.FlexDirectionRow]}>\n                              {showLoaderM && (\n                                <ActivityIndicator\n                                  size=\"small\"\n                                  color=\"white\"\n                                  style={[GlobalStyles.activityIndicator]}\n                                ></ActivityIndicator>\n                              )}\n                              <Text style={GlobalStyles.ButtonTextMain}>\n                                {strings.SENDCODE}\n                              </Text>\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    ) : (\n                      <View>\n                        <Text\n                          style={{\n                            fontSize: 12,\n                            fontFamily: \"Poppins_600SemiBold\",\n                          }}\n                        >\n                          {strings.PHONENO}\n                        </Text>\n                        <View style={Forgot_Password_Styles.text_input}>\n                          <TextInput\n                            label={strings.PHONENO}\n                            placeholder=\"+921234567890\"\n                            keyboardType={\"phone-pad\"}\n                            onChangeText={(text) => {\n                              if (text == \"\") {\n                                setIsPhoneNoValid(false);\n                              } else {\n                                setPhone(text);\n                                setIsPhoneNoValid(true);\n                              }\n                            }}\n                          />\n                          <View\n                            style={{\n                              justifyContent: \"flex-end\",\n                              top: 15,\n                            }}\n                          >\n                            {!isPhoneNoValid && (\n                              <Text\n                                style={[\n                                  GlobalStyles.inputErrorTxt,\n                                  GlobalStyles.fullwidth,\n                                ]}\n                              >\n                                *this field is required\n                              </Text>\n                            )}\n                          </View>\n                        </View>\n                        <View style={Forgot_Password_Styles.inputContainer}>\n                          <TouchableOpacity\n                            style={GlobalStyles.Button}\n                            onPress={() => {\n                              sendCodePhone();\n                              console.log(\"ok\");\n                            }}\n                          >\n                            <View style={[GlobalStyles.FlexDirectionRow]}>\n                              {showLoaderM && (\n                                <ActivityIndicator\n                                  size=\"small\"\n                                  color=\"white\"\n                                  style={[GlobalStyles.activityIndicator]}\n                                ></ActivityIndicator>\n                              )}\n                              <Text style={GlobalStyles.ButtonTextMain}>\n                                {strings.SENDCODE}\n                              </Text>\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    )} */}\n                      <View>\n                        <Text\n                          style={{\n                            fontSize: 12,\n                            fontFamily: \"Poppins_600SemiBold\",\n                          }}\n                        >\n                          {strings.MOBILENO}\n                        </Text>\n                        <View style={Forgot_Password_Styles.text_input}>\n                          <TextInput\n                            label={strings.PHONENO}\n                            placeholder=\"+341234567890\"\n                            keyboardType={\"phone-pad\"}\n                            onChangeText={(text) => {\n                              if (text == \"\") {\n                                setIsPhoneNoValid(false);\n                              } else {\n                                setPhone(text);\n                                setIsPhoneNoValid(true);\n                              }\n                            }}\n                          />\n                          <View\n                            style={{\n                              justifyContent: \"flex-end\",\n                              top: 15,\n                            }}\n                          >\n                            {!isPhoneNoValid && (\n                              <Text\n                                style={[\n                                  GlobalStyles.inputErrorTxt,\n                                  GlobalStyles.fullwidth,\n                                ]}\n                              >\n                                *this field is required\n                              </Text>\n                            )}\n                          </View>\n                        </View>\n                        <View style={Forgot_Password_Styles.inputContainer}>\n                          <TouchableOpacity\n                            style={GlobalStyles.Button}\n                            onPress={() => {\n                              sendCodePhone();\n                              console.log(\"ok\");\n                            }}\n                          >\n                            <View style={[GlobalStyles.FlexDirectionRow]}>\n                              {showLoaderM && (\n                                <ActivityIndicator\n                                  size=\"small\"\n                                  color=\"white\"\n                                  style={[GlobalStyles.activityIndicator]}\n                                ></ActivityIndicator>\n                              )}\n                              <Text style={GlobalStyles.ButtonTextMain}>\n                                {strings.SENDCODE}\n                              </Text>\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                )}\n              </ScrollView>\n            </View>\n          </TouchableWithoutFeedback>\n        </Modal>\n\n        <TouchableOpacity\n          style={Forgot_Password_Styles.Button}\n          onPress={() => submitt()}\n        >\n          <View style={{ flexDirection: \"row\" }}>\n            {showloaderM && (\n              <ActivityIndicator\n                size=\"small\"\n                color=\"white\"\n                style={[GlobalStyles.activityIndicator]}\n              ></ActivityIndicator>\n            )}\n            <Text\n              style={{\n                fontSize: 17,\n                fontFamily: \"Poppins_500Medium\",\n                color: \"white\",\n              }}\n            >\n              {strings.SUBMIT}\n            </Text>\n          </View>\n        </TouchableOpacity>\n        {/* <View style={[GlobalStyles.FlexDirectionRow, { paddingTop: \"2%\" }]}>\n          <Text style={GlobalStyles.regulatTextlight}>\n            {strings.DONTHAVEANACCOUNT}\n          </Text>\n          <TouchableOpacity onPress={() => navigation.navigate(\"RegisterType\")}>\n            <Text\n              style={{\n                fontSize: 12,\n                fontFamily: \"Poppins_600SemiBold\",\n                color: \"#51AB1D\",\n                left: 3,\n              }}\n            >\n              {strings.REGISTER}\n            </Text>\n          </TouchableOpacity>\n        </View> */}\n      </View>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}