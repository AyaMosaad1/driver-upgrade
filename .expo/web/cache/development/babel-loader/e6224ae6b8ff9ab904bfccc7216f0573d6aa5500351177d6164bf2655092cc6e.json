{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Config from \"../Api/Config\";\nimport axios from \"axios\";\nimport axiosRetry from \"axios-retry\";\nimport OwnStorage from \"./StorageController\";\nvar Api = function () {\n  function Api() {\n    _classCallCheck(this, Api);\n    this._handleError = function (error) {\n      switch (error.response && error.response.status) {\n        case 401:\n          break;\n        case 404:\n          break;\n        default:\n          break;\n      }\n      return Promise.reject(error);\n    };\n    this._redirectTo = function (document, path) {\n      document.location = path;\n    };\n    this.localdata = new OwnStorage();\n    this.apiUrl = Config.BaseUrl;\n    var service = axios.create({\n      headers: {\n        csrf: \"token\",\n        accept: \"application/json\"\n      }\n    });\n    var retryDelay = function retryDelay() {\n      var retryNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var seconds = Math.pow(2, retryNumber) * 1000;\n      var randomMs = 1000 * Math.random();\n      return seconds + randomMs;\n    };\n    axiosRetry(service, {\n      retries: 2,\n      retryDelay: retryDelay,\n      retryCondition: axiosRetry.isRetryableError\n    });\n    service.interceptors.response.use(this._handleSuccess, this._handleError);\n    this.service = service;\n  }\n  _createClass(Api, [{\n    key: \"_handleSuccess\",\n    value: function _handleSuccess(response) {\n      return response;\n    }\n  }, {\n    key: \"request\",\n    value: (function () {\n      var _request = _asyncToGenerator(function* (type, path, payload, bearerToken) {\n        type = type.toLowerCase();\n        if (path.includes(\"http\") || path.includes(\"https\")) {\n          if (path.startsWith(\"/\")) path = path.substr(path.indexOf(\"/\") + 1);\n        } else {\n          path = this.apiUrl + path;\n        }\n        if (typeof bearerToken === \"undefined\") {\n          bearerToken = yield this.localdata.GetLoginPref();\n        }\n        if (bearerToken) {\n          this.service.defaults.headers.Authorization = `Bearer ${bearerToken}`;\n        }\n        if (type === \"get\") {\n          return this.service.get(path).then(function (response) {\n            return response.data;\n          });\n        }\n        return this.service.request({\n          method: type,\n          url: path,\n          responseType: \"json\",\n          data: payload\n        }).then(function (response) {\n          return response.data;\n        });\n      });\n      function request(_x, _x2, _x3, _x4) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }())\n  }]);\n  return Api;\n}();\nexport default new Api();","map":{"version":3,"names":["Config","axios","axiosRetry","OwnStorage","Api","_classCallCheck","_handleError","error","response","status","Promise","reject","_redirectTo","document","path","location","localdata","apiUrl","BaseUrl","service","create","headers","csrf","accept","retryDelay","retryNumber","arguments","length","undefined","seconds","Math","pow","randomMs","random","retries","retryCondition","isRetryableError","interceptors","use","_handleSuccess","_createClass","key","value","_request","_asyncToGenerator","type","payload","bearerToken","toLowerCase","includes","startsWith","substr","indexOf","GetLoginPref","defaults","Authorization","get","then","data","request","method","url","responseType","_x","_x2","_x3","_x4","apply"],"sources":["C:/Users/Ayamo/Downloads/driver-master/Api/Api.js"],"sourcesContent":["import Config from \"../Api/Config\";\nimport axios from \"axios\";\nimport axiosRetry from \"axios-retry\";\nimport OwnStorage from \"./StorageController\";\nclass Api {\n  constructor() {\n    this.localdata = new OwnStorage();\n    this.apiUrl = Config.BaseUrl;\n    let service = axios.create({\n      headers: {\n        csrf: \"token\",\n        accept: \"application/json\",\n      },\n    });\n\n    const retryDelay = (retryNumber = 0) => {\n      const seconds = Math.pow(2, retryNumber) * 1000;\n      const randomMs = 1000 * Math.random();\n      return seconds + randomMs;\n    };\n\n    axiosRetry(service, {\n      retries: 2,\n      retryDelay,\n      // retry on Network Error & 5xx responses\n      retryCondition: axiosRetry.isRetryableError,\n    });\n\n    service.interceptors.response.use(this._handleSuccess, this._handleError);\n    this.service = service;\n  }\n\n  _handleSuccess(response) {\n    return response;\n  }\n\n  _handleError = (error) => {\n    switch (error.response && error.response.status) {\n      case 401:\n        // toast.error('Unauthorized, check console for details');\n        break;\n      case 404:\n        // toast.error('Route not found, check console for details');\n        break;\n      default:\n        // toast.error('Server/Unknown error occurred, check console for details');\n        break;\n    }\n    return Promise.reject(error);\n  };\n\n  _redirectTo = (document, path) => {\n    document.location = path;\n  };\n\n  /**\n   * Method to handle api requests.\n   * @param {string} type\n   * @param {string} path\n   * @param {Object} [payload]\n   */\n  async request(type, path, payload, bearerToken) {\n    type = type.toLowerCase();\n\n    //Check if this is dev URL request\n    // let isTest = false;\n\n    // let userName;\n    //If this is login request\n    // if (path == \"public/auth\") {\n    //   userName = payload.username;\n    // } else {\n    //   userName = await Storage.getData(\"username\");\n    // }\n\n    if (path.includes(\"http\") || path.includes(\"https\")) {\n      if (path.startsWith(\"/\")) path = path.substr(path.indexOf(\"/\") + 1);\n    } else {\n      path = this.apiUrl + path;\n    }\n\n    //Load token from local storage if not available in request\n    if (typeof bearerToken === \"undefined\") {\n      bearerToken = await this.localdata.GetLoginPref();\n    }\n\n    if (bearerToken) {\n      this.service.defaults.headers.Authorization = `Bearer ${bearerToken}`;\n    }\n\n    if (type === \"get\") {\n      return this.service.get(path).then((response) => response.data);\n    }\n\n    return this.service\n      .request({\n        method: type,\n        url: path,\n        responseType: \"json\",\n        data: payload,\n      })\n      .then((response) => response.data);\n  }\n}\n// {api call}\n// let path = \"profile\";\n// Api.request(\"patch\", path, profiledata)\n//   .then((response) => {\n//     console.log(\"updated response status\", response);\n\n//     setshowloaderM(false);\n\n//     console.log(\"updated response\", response.data);\n//     dispatch(DriverDetails(response.data));\n//     Toast.show(response.message);\n\n//     navigation.navigate(\"BottomTabNavigation\", { screen: \"Profile\" });\n//   })\n//   .catch((error) => {\n//     setshowloaderM(false);\n\n//     console.log(\"error\", error);\n//     for (const [key, value] of Object.entries(\n//       error.response.data.errors\n//     )) {\n//       console.log(`${key}: ${value}`);\n//       Toast.show(`${key}: ${value}`);\n//     }\n//   });\n// {api call}\n\nexport default new Api();\n"],"mappings":";;;AAAA,OAAOA,MAAM;AACb,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,UAAU;AAA4B,IACvCC,GAAG;EACP,SAAAA,IAAA,EAAc;IAAAC,eAAA,OAAAD,GAAA;IAAA,KA+BdE,YAAY,GAAG,UAACC,KAAK,EAAK;MACxB,QAAQA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,MAAM;QAC7C,KAAK,GAAG;UAEN;QACF,KAAK,GAAG;UAEN;QACF;UAEE;MACJ;MACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;IAC9B,CAAC;IAAA,KAEDK,WAAW,GAAG,UAACC,QAAQ,EAAEC,IAAI,EAAK;MAChCD,QAAQ,CAACE,QAAQ,GAAGD,IAAI;IAC1B,CAAC;IA/CC,IAAI,CAACE,SAAS,GAAG,IAAIb,UAAU,CAAC,CAAC;IACjC,IAAI,CAACc,MAAM,GAAGjB,MAAM,CAACkB,OAAO;IAC5B,IAAIC,OAAO,GAAGlB,KAAK,CAACmB,MAAM,CAAC;MACzBC,OAAO,EAAE;QACPC,IAAI,EAAE,OAAO;QACbC,MAAM,EAAE;MACV;IACF,CAAC,CAAC;IAEF,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAwB;MAAA,IAApBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;MACjC,IAAMG,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,WAAW,CAAC,GAAG,IAAI;MAC/C,IAAMO,QAAQ,GAAG,IAAI,GAAGF,IAAI,CAACG,MAAM,CAAC,CAAC;MACrC,OAAOJ,OAAO,GAAGG,QAAQ;IAC3B,CAAC;IAED9B,UAAU,CAACiB,OAAO,EAAE;MAClBe,OAAO,EAAE,CAAC;MACVV,UAAU,EAAVA,UAAU;MAEVW,cAAc,EAAEjC,UAAU,CAACkC;IAC7B,CAAC,CAAC;IAEFjB,OAAO,CAACkB,YAAY,CAAC7B,QAAQ,CAAC8B,GAAG,CAAC,IAAI,CAACC,cAAc,EAAE,IAAI,CAACjC,YAAY,CAAC;IACzE,IAAI,CAACa,OAAO,GAAGA,OAAO;EACxB;EAACqB,YAAA,CAAApC,GAAA;IAAAqC,GAAA;IAAAC,KAAA,EAED,SAAAH,eAAe/B,QAAQ,EAAE;MACvB,OAAOA,QAAQ;IACjB;EAAC;IAAAiC,GAAA;IAAAC,KAAA;MAAA,IAAAC,QAAA,GAAAC,iBAAA,CA2BD,WAAcC,IAAI,EAAE/B,IAAI,EAAEgC,OAAO,EAAEC,WAAW,EAAE;QAC9CF,IAAI,GAAGA,IAAI,CAACG,WAAW,CAAC,CAAC;QAazB,IAAIlC,IAAI,CAACmC,QAAQ,CAAC,MAAM,CAAC,IAAInC,IAAI,CAACmC,QAAQ,CAAC,OAAO,CAAC,EAAE;UACnD,IAAInC,IAAI,CAACoC,UAAU,CAAC,GAAG,CAAC,EAAEpC,IAAI,GAAGA,IAAI,CAACqC,MAAM,CAACrC,IAAI,CAACsC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrE,CAAC,MAAM;UACLtC,IAAI,GAAG,IAAI,CAACG,MAAM,GAAGH,IAAI;QAC3B;QAGA,IAAI,OAAOiC,WAAW,KAAK,WAAW,EAAE;UACtCA,WAAW,SAAS,IAAI,CAAC/B,SAAS,CAACqC,YAAY,CAAC,CAAC;QACnD;QAEA,IAAIN,WAAW,EAAE;UACf,IAAI,CAAC5B,OAAO,CAACmC,QAAQ,CAACjC,OAAO,CAACkC,aAAa,GAAI,UAASR,WAAY,EAAC;QACvE;QAEA,IAAIF,IAAI,KAAK,KAAK,EAAE;UAClB,OAAO,IAAI,CAAC1B,OAAO,CAACqC,GAAG,CAAC1C,IAAI,CAAC,CAAC2C,IAAI,CAAC,UAACjD,QAAQ;YAAA,OAAKA,QAAQ,CAACkD,IAAI;UAAA,EAAC;QACjE;QAEA,OAAO,IAAI,CAACvC,OAAO,CAChBwC,OAAO,CAAC;UACPC,MAAM,EAAEf,IAAI;UACZgB,GAAG,EAAE/C,IAAI;UACTgD,YAAY,EAAE,MAAM;UACpBJ,IAAI,EAAEZ;QACR,CAAC,CAAC,CACDW,IAAI,CAAC,UAACjD,QAAQ;UAAA,OAAKA,QAAQ,CAACkD,IAAI;QAAA,EAAC;MACtC,CAAC;MAAA,SAAAC,QAAAI,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAvB,QAAA,CAAAwB,KAAA,OAAAzC,SAAA;MAAA;MAAA,OAAAiC,OAAA;IAAA;EAAA;EAAA,OAAAvD,GAAA;AAAA;AA6BH,eAAe,IAAIA,GAAG,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}